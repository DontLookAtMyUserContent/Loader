local liiIllI1liIIIi1iIII = assert local lI1IIIIlIli1I1il1II = select local i1II1I1lIlll1I11I11 = tonumber local liIlI1i1iIllIII11lI = unpack local lIli1Ii111lII1iil1lII = pcall local l1il1Ii1I11iIiil11i = setfenv local lllIiilii111Ilili1l = setmetatable local lll11IiiliIl1i1i1il = type local lillil1iili111Illii = getfenv local lIli1I11I1IiI1l1ii1il = tostring local il1IIiil11iiI1IlilI = error local iiiIIIiliiliIlIIiIl = string.sub local i1i1l1iiil1iillIiII = string.byte local lIliiI11Iili1IIll1I11 = string.char local I11IlIlIll11lI1Ill1 = string.rep local I111I11l1iill1Il1ll = string.gsub local lIi1IIlll1i1ilII1ll = string.match local lIliIl1iII1illll1Illl = table.insert local I1lil11111Iil1I1I11 = i1i1l1iiil1iillIiII("7", 1) local li11l1lliIlIII1iI1i, lIlIiIIlIIiIIllilI1li = #{2668}, #{ 5590, 6622, 4471, 6635, 113, 1502, 540, 4799, 5908, 6576, 5685, 3323, 5335, 2150, 4956, 93, 4906, 5581, 3689, 1350, 2746, 722 } + I1lil11111Iil1I1I11 + 130994 local l1il1ll1i1lllIi1Ill = {} local lIlIllli1Ilill1ii1lIi = 1 local IiiliilIIlIli111liI, Illi11IIiiIIl1Ili11 local function Ii1I1l1111Ili111iiI(ill1lIIlililII1i11I, ii1lli1liili11IIlIi) local ilIlii11il1II11I1i1 ill1lIIlililII1i11I = I111I11l1iill1Il1ll(iiiIIIiliiliIlIIiIl(ill1lIIlililII1i11I, 5), "..", function(iiIIllIliI1ii1ill1i) if i1i1l1iiil1iillIiII(iiIIllIliI1ii1ill1i, 2) == 72 then ilIlii11il1II11I1i1 = i1II1I1lIlll1I11I11(iiiIIIiliiliIlIIiIl(iiIIllIliI1ii1ill1i, 1, 1)) return "" else local I1iIlIlliIlilII1IlI = lIliiI11Iili1IIll1I11(i1II1I1lIlll1I11I11(iiIIllIliI1ii1ill1i, 16)) if ilIlii11il1II11I1i1 then local I11li1lliiIi1ii1iii = I11IlIlIll11lI1Ill1(I1iIlIlliIlilII1IlI, ilIlii11il1II11I1i1) ilIlii11il1II11I1i1 = nil return I11li1lliiIi1ii1iii else return I1iIlIlliIlilII1IlI end end end) local function lIliiI1lIlllliI1llI1I() local iI11illIll1Iilil1Ii = i1i1l1iiil1iillIiII(ill1lIIlililII1i11I, lIlIllli1Ilill1ii1lIi, lIlIllli1Ilill1ii1lIi) lIlIllli1Ilill1ii1lIi = lIlIllli1Ilill1ii1lIi + 1 return iI11illIll1Iilil1Ii end local function i1I1il1I11i1iIilIII() local iI11illIll1Iilil1Ii, I1iIlIlliIlilII1IlI, I11li1lliiIi1ii1iii, IiiIIiI1lII1l1iiili = i1i1l1iiil1iillIiII(ill1lIIlililII1i11I, lIlIllli1Ilill1ii1lIi, lIlIllli1Ilill1ii1lIi + 3) lIlIllli1Ilill1ii1lIi = lIlIllli1Ilill1ii1lIi + 4 return IiiIIiI1lII1l1iiili * 16777216 + I11li1lliiIi1ii1iii * 65536 + I1iIlIlliIlilII1IlI * 256 + iI11illIll1Iilil1Ii end local function ili1illIiIl1I11III1(llllIIiI1IiIiiI1l1l, IIiIl11IiIiiiiiii1I, Il1IIiiIil1i1I1lIli) if Il1IIiiIil1i1I1lIli then local lIlIIilil1ii11iiili1i, lIiIIll1i1IlIilillI = 0, 0 for llIlII11i11IliIlll1 = IIiIl11IiIiiiiiii1I, Il1IIiiIil1i1I1lIli do lIlIIilil1ii11iiili1i = lIlIIilil1ii11iiili1i + 2 ^ lIiIIll1i1IlIilillI * ili1illIiIl1I11III1(llllIIiI1IiIiiI1l1l, llIlII11i11IliIlll1) lIiIIll1i1IlIilillI = lIiIIll1i1IlIilillI + 1 end return lIlIIilil1ii11iiili1i else local Ii1IlI1IiIil111iliI = 2 ^ (IIiIl11IiIiiiiiii1I - 1) return Ii1IlI1IiIil111iliI <= llllIIiI1IiIiiI1l1l % (Ii1IlI1IiIil111iliI + Ii1IlI1IiIil111iliI) and 1 or 0 end end local function l1iili1ll11ill1l11l() local iI11illIll1Iilil1Ii, I1iIlIlliIlilII1IlI = i1I1il1I11i1iIilIII(), i1I1il1I11i1iIilIII() if iI11illIll1Iilil1Ii == 0 and I1iIlIlliIlilII1IlI == 0 then return 0 end return (-2 * ili1illIiIl1I11III1(I1iIlIlliIlilII1IlI, 32) + 1) * 2 ^ (ili1illIiIl1I11III1(I1iIlIlliIlilII1IlI, 21, 31) - 1023) * ((ili1illIiIl1I11III1(I1iIlIlliIlilII1IlI, 1, 20) * 4294967296 + iI11illIll1Iilil1Ii) / 4503599627370496 + 1) end local l1iI1lIIiI1iliiliil = bit or bit32 local i1lI1iIliIli1i1llIi = l1iI1lIIiI1iliiliil and l1iI1lIIiI1iliiliil.bxor or function(iI11illIll1Iilil1Ii, I1iIlIlliIlilII1IlI) local IIl1lIl1i1lill1lll1 = 1 local I11li1lliiIi1ii1iii = 0 while iI11illIll1Iilil1Ii > 0 and I1iIlIlliIlilII1IlI > 0 do local iIi1lIlII11IiiIiili = iI11illIll1Iilil1Ii % 2 local lIlIii1iIi1Ilii1lIIil = I1iIlIlliIlilII1IlI % 2 if iIi1lIlII11IiiIiili ~= lIlIii1iIi1Ilii1lIIil then I11li1lliiIi1ii1iii = I11li1lliiIi1ii1iii + IIl1lIl1i1lill1lll1 end iI11illIll1Iilil1Ii = (iI11illIll1Iilil1Ii - iIi1lIlII11IiiIiili) / 2 I1iIlIlliIlilII1IlI = (I1iIlIlliIlilII1IlI - lIlIii1iIi1Ilii1lIIil) / 2 IIl1lIl1i1lill1lll1 = IIl1lIl1i1lill1lll1 * 2 end if iI11illIll1Iilil1Ii < I1iIlIlliIlilII1IlI then iI11illIll1Iilil1Ii = I1iIlIlliIlilII1IlI end while iI11illIll1Iilil1Ii > 0 do local iIi1lIlII11IiiIiili = iI11illIll1Iilil1Ii % 2 if iIi1lIlII11IiiIiili > 0 then I11li1lliiIi1ii1iii = I11li1lliiIi1ii1iii + IIl1lIl1i1lill1lll1 end iI11illIll1Iilil1Ii = (iI11illIll1Iilil1Ii - iIi1lIlII11IiiIiili) / 2 IIl1lIl1i1lill1lll1 = IIl1lIl1i1lill1lll1 * 2 end return I11li1lliiIi1ii1iii end local function lIll1I1i1llliI1Il1lIl(iIl11Il1lIllIiiIIii) local ll1IIlllIII1I1iIIi1 = { i1i1l1iiil1iillIiII(ill1lIIlililII1i11I, lIlIllli1Ilill1ii1lIi, lIlIllli1Ilill1ii1lIi + 3) } lIlIllli1Ilill1ii1lIi = lIlIllli1Ilill1ii1lIi + 4 local iI11illIll1Iilil1Ii = i1lI1iIliIli1i1llIi(ll1IIlllIII1I1iIIi1[1], Illi11IIiiIIl1Ili11) local I1iIlIlliIlilII1IlI = i1lI1iIliIli1i1llIi(ll1IIlllIII1I1iIIi1[2], Illi11IIiiIIl1Ili11) local I11li1lliiIi1ii1iii = i1lI1iIliIli1i1llIi(ll1IIlllIII1I1iIIi1[3], Illi11IIiiIIl1Ili11) local IiiIIiI1lII1l1iiili = i1lI1iIliIli1i1llIi(ll1IIlllIII1I1iIIi1[4], Illi11IIiiIIl1Ili11) Illi11IIiiIIl1Ili11 = (173 * Illi11IIiiIIl1Ili11 + iIl11Il1lIllIiiIIii) % 256 return IiiIIiI1lII1l1iiili * 16777216 + I11li1lliiIi1ii1iii * 65536 + I1iIlIlliIlilII1IlI * 256 + iI11illIll1Iilil1Ii end local function lIll1i11liIli1111lII1(I111lIiI1ll1I1ll1Ii) local il1ii1il1iilIli1lIl = i1I1il1I11i1iIilIII() local lIII1Iill1iIiiI1IIl = "" for llIlII11i11IliIlll1 = li11l1lliIlIII1iI1i, il1ii1il1iilIli1lIl do lIII1Iill1iIiiI1IIl = lIII1Iill1iIiiI1IIl .. lIliiI11Iili1IIll1I11(i1lI1iIliIli1i1llIi(i1i1l1iiil1iillIiII(ill1lIIlililII1i11I, lIlIllli1Ilill1ii1lIi + llIlII11i11IliIlll1 - 1), IiiliilIIlIli111liI)) IiiliilIIlIli111liI = (I111lIiI1ll1I1ll1Ii * IiiliilIIlIli111liI + 61) % 256 end lIlIllli1Ilill1ii1lIi = lIlIllli1Ilill1ii1lIi + il1ii1il1iilIli1lIl return lIII1Iill1iIiiI1IIl end IiiliilIIlIli111liI = lIliiI1lIlllliI1llI1I() Illi11IIiiIIl1Ili11 = lIliiI1lIlllliI1llI1I() local ll1i11I1iiI1iIIliiI = {} for llIlII11i11IliIlll1 = li11l1lliIlIII1iI1i, lIliiI1lIlllliI1llI1I() do local i1IiI11Ii11IiliiiiI = lIliiI1lIlllliI1llI1I() local iIiII1II1li111I1i1I = (llIlII11i11IliIlll1 - 1) * 2 ll1i11I1iiI1iIIliiI[iIiII1II1li111I1i1I] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, 1, 4) ll1i11I1iiI1iIIliiI[iIiII1II1li111I1i1I + 1] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, 5, 8) end local function i1iilll1iIIliii1i1l() local iilillllilII11lIli1 = { {}, {}, nil, nil, {}, nil, {} } i1I1il1I11i1iIilIII() lIliiI1lIlllliI1llI1I() lIliiI1lIlllliI1llI1I() iilillllilII11lIli1[3] = lIliiI1lIlllliI1llI1I() i1I1il1I11i1iIilIII() i1I1il1I11i1iIilIII() i1I1il1I11i1iIilIII() lIliiI1lIlllliI1llI1I() i1I1il1I11i1iIilIII() local iIiliI11IIliiiIll11 = i1I1il1I11i1iIilIII() for llIlII11i11IliIlll1 = li11l1lliIlIII1iI1i, iIiliI11IIliiiIll11 do iilillllilII11lIli1[7][llIlII11i11IliIlll1] = i1I1il1I11i1iIilIII() end local lIIIIiIllill1iIIIi1 = i1I1il1I11i1iIilIII() - (#{ 677, 872, 2602, 2331, 1704, 1542, 1844, 2802, 1328, 3103, 1121, 3722, 3668, 5101, 439, 4382, 5097, 1749, 4768, 5140, 6709, 3608, 5798 } + I1lil11111Iil1I1I11 + 133693) local i1ll1I11IiIliI11lli = lIliiI1lIlllliI1llI1I() for llIlII11i11IliIlll1 = li11l1lliIlIII1iI1i, lIIIIiIllill1iIIIi1 do local I1IiIll11Ill11li11l = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local i1IiI11Ii11IiliiiiI = lIll1I1i1llliI1Il1lIl(i1ll1I11IiIliI11lli) I1IiIll11Ill11li11l[3] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, #{ 2891, 4150, 6520, 2874, 4822, 6904, 4135, 359, 6394, 756, 1600, 1338, 120, 821, 1140, 6796, 701, 5416, 4740 }, #{ 3953, 4081, 2481, 3317, 4266, 5317, 1756, 1727, 4699, 5520, 1151, 6878, 18, 6552, 4832, 2203, 4183, 6439, 5827, 2127, 2979, 5365 } + I1lil11111Iil1I1I11 + -51) I1IiIll11Ill11li11l[6] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, #{3829}, #{ 377, 4024, 4149, 4447, 2846, 3525, 2349, 4943, 5239, 5580, 6899, 1741, 2660, 231, 5183, 6067, 4608, 256 }) I1IiIll11Ill11li11l[9] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, #{1494}, #{ 4020, 4222, 5716, 127, 1963, 1002, 4219, 2116, 5581 }) I1IiIll11Ill11li11l[1] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, #{ 4747, 5652, 2735, 2189, 4395, 6820, 1707, 4248, 2261, 1765 }, #{ 6761, 4551, 6818, 5923, 1637, 465, 3678, 6038, 945, 6607, 4904, 4550, 6148, 4326, 797, 4085, 5299, 2982 }) I1IiIll11Ill11li11l[8] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, #{ 5035, 6871, 2114, 76, 4706, 1075, 2448, 5929, 953, 4221, 4044, 5275, 291, 2311, 2173, 5372, 2882, 3308, 6626, 5934, 1505, 6565, 6098 } + I1lil11111Iil1I1I11 + -51, #{ 4245, 2906, 6958, 1937, 4083, 2527, 3240, 930, 6035, 3355, 2400, 3916, 1939, 1043, 693, 6170, 665, 6015, 5904, 5935, 6568 } + I1lil11111Iil1I1I11 + -44) I1IiIll11Ill11li11l[10954] = ili1illIiIl1I11III1(i1IiI11Ii11IiliiiiI, #{3661}, #{ 5938, 2739, 82, 5442, 537, 3543, 1786, 128, 5464, 3971, 4537, 1848, 6288, 1333, 6398, 31, 4022, 159 }) iilillllilII11lIli1[2][llIlII11i11IliIlll1] = I1IiIll11Ill11li11l end lIliiI1lIlllliI1llI1I() local iIiliI11IIliiiIll11 = i1I1il1I11i1iIilIII() for llIlII11i11IliIlll1 = li11l1lliIlIII1iI1i, iIiliI11IIliiiIll11 do iilillllilII11lIli1[1][llIlII11i11IliIlll1 - li11l1lliIlIII1iI1i] = i1iilll1iIIliii1i1l() end i1I1il1I11i1iIilIII() i1I1il1I11i1iIilIII() local iIiliI11IIliiiIll11 = i1I1il1I11i1iIilIII() - (#{ 2363, 59, 3668, 3859, 3833, 2770, 3161, 6487, 4975, 5380, 2599, 5711, 152, 1697, 367, 792, 900, 6637, 1729, 3615, 2800, 1169, 3867 } + I1lil11111Iil1I1I11 + 133708) local lIliliIiiiIllIlIlI11l = lIliiI1lIlllliI1llI1I() for llIlII11i11IliIlll1 = li11l1lliIlIII1iI1i, iIiliI11IIliiiIll11 do local I1IIIll1Il111il11Ii local lll11IiiliIl1i1i1il = lIliiI1lIlllliI1llI1I() if lll11IiiliIl1i1i1il == #{ 5816, 4175, 4278, 2906, 1321, 6956, 2538, 3514, 3950, 2401, 1875, 5202, 732, 643, 1288, 6797, 4233, 330, 2151, 443, 3579 } + I1lil11111Iil1I1I11 + 123 then I1IIIll1Il111il11Ii = iiiIIIiliiliIlIIiIl(lIll1i11liIli1111lII1(lIliliIiiiIllIlIlI11l), #{ 4650, 2960, 2258, 4923 }) end if lll11IiiliIl1i1i1il == #{ 4345, 3308, 6216, 2675, 2940, 6300, 4728, 2018, 3505, 3298, 5319, 6697, 914, 6686, 459, 6789, 6342, 2579, 422, 227 } + I1lil11111Iil1I1I11 + 101 then I1IIIll1Il111il11Ii = iiiIIIiliiliIlIIiIl(lIll1i11liIli1111lII1(insEncKey), #{3949}) end if lll11IiiliIl1i1i1il == #{ 1502, 6646, 3789, 1856, 5602, 3864, 3233, 5921, 2016, 4381, 6138, 1455, 2035, 5161, 5455, 5220, 6327, 4393, 4593, 2234 } + I1lil11111Iil1I1I11 + 0 then I1IIIll1Il111il11Ii = i1I1il1I11i1iIilIII() end if lll11IiiliIl1i1i1il == #{ 6840, 2203, 6531, 5056, 4964, 3302, 1316, 2935, 4379, 6802, 941, 6546, 4179, 2319, 1824, 4888, 4386, 5324, 4884, 3789, 4792, 3159, 263, 6265 } + I1lil11111Iil1I1I11 + 74 then I1IIIll1Il111il11Ii = #{ 5520, 6123, 1668, 2483, 5357, 1992, 5436, 4508, 4395, 2188, 1294, 3464, 2821, 6215, 1366, 2944, 1769, 6421, 3864, 3525, 5651, 5219 } + I1lil11111Iil1I1I11 + 52708 == #{ 5520, 6123, 1668, 2483, 5357, 1992, 5436, 4508, 4395, 2188, 1294, 3464, 2821, 6215, 1366, 2944, 1769, 6421, 3864, 3525, 5651, 5219 } + I1lil11111Iil1I1I11 + 52708 end if lll11IiiliIl1i1i1il == #{ 2441, 1326, 1052, 5856, 132, 4718, 1151, 5238, 6112, 406, 4296 } then I1IIIll1Il111il11Ii = #{ 5856, 6380, 1808, 251, 1221, 1388, 2415, 4683, 6299, 1439, 6059, 5263, 782, 4459, 5776, 6235, 1244, 6751, 5602, 3411, 6572, 6238, 4582, 5148 } + I1lil11111Iil1I1I11 + 46114 == #{ 4071, 4998, 3506, 6507, 212, 5772, 6602, 1229, 6343, 3197, 3987, 2498, 1148, 852, 307, 6083, 4848, 4714, 5731, 2178, 5507 } + I1lil11111Iil1I1I11 + 93060 end if lll11IiiliIl1i1i1il == #{ 4171, 4730, 945, 302, 3598, 2511, 732, 1513, 4653, 5974, 2686, 6601, 3582, 4421, 1576, 770, 5388, 1382, 2495, 2641, 177, 2364 } + I1lil11111Iil1I1I11 + 42 then I1IIIll1Il111il11Ii = lIliiI1lIlllliI1llI1I() + i1I1il1I11i1iIilIII() + l1iili1ll11ill1l11l() end if lll11IiiliIl1i1i1il == #{ 6234, 3708, 1226, 3994, 1389, 6659, 4932, 2633, 1572, 1055, 3446, 2815, 843, 5915, 5802, 2470, 4570, 739, 4415, 6200, 6790 } + I1lil11111Iil1I1I11 + 21 then I1IIIll1Il111il11Ii = iiiIIIiliiliIlIIiIl(lIll1i11liIli1111lII1(#{ 5742, 2703, 2795, 311, 4572, 1957, 1890, 4219, 6241, 953, 6144, 3558, 2232, 5827, 2854, 6015, 456, 991, 1862, 754, 200, 2237, 567 } + I1lil11111Iil1I1I11 + 42), #{2895}) end if lll11IiiliIl1i1i1il == #{ 5026, 3612, 5946, 5878, 4931, 2157, 1842, 1346, 5892, 1288, 1208, 3073, 1350, 237, 5688, 4008, 5148, 25, 4773, 3136, 5713, 3205 } + I1lil11111Iil1I1I11 + 28 then I1IIIll1Il111il11Ii = lIliiI1lIlllliI1llI1I() end if lll11IiiliIl1i1i1il == #{ 2648, 5191, 1567, 3771, 2496, 5929, 3207, 1557, 4057, 1527, 6012, 3486, 4564, 404, 5371, 5427, 5684, 747, 3620, 3566, 5614, 2225, 6115 } + I1lil11111Iil1I1I11 + -48 then I1IIIll1Il111il11Ii = l1iili1ll11ill1l11l() end iilillllilII11lIli1[5][llIlII11i11IliIlll1 - li11l1lliIlIII1iI1i] = I1IIIll1Il111il11Ii end for llIlII11i11IliIlll1 = li11l1lliIlIII1iI1i, lIIIIiIllill1iIIIi1 do local I1IiIll11Ill11li11l = iilillllilII11lIli1[2][llIlII11i11IliIlll1] local lIlI1ilIiiIl1lIIil1Il = ll1i11I1iiI1iIIliiI[I1IiIll11Ill11li11l[8]] if lIlI1ilIiiIl1lIIil1Il == #{1714, 2197} and I1IiIll11Ill11li11l[1] > 255 then I1IiIll11Ill11li11l[7] = true I1IiIll11Ill11li11l[10] = iilillllilII11lIli1[5][I1IiIll11Ill11li11l[1] - 256] end if lIlI1ilIiiIl1lIIil1Il == #{6259} and I1IiIll11Ill11li11l[9] > 255 then I1IiIll11Ill11li11l[2] = true I1IiIll11Ill11li11l[4] = iilillllilII11lIli1[5][I1IiIll11Ill11li11l[9] - 256] end if lIlI1ilIiiIl1lIIil1Il == #{ 4001, 5527, 2730, 5035 } then I1IiIll11Ill11li11l[5] = iilillllilII11lIli1[5][I1IiIll11Ill11li11l[6]] end if lIlI1ilIiiIl1lIIil1Il == #{ 2655, 4988, 4320 } then if I1IiIll11Ill11li11l[9] > 255 then I1IiIll11Ill11li11l[2] = true I1IiIll11Ill11li11l[4] = iilillllilII11lIli1[5][I1IiIll11Ill11li11l[9] - 256] end if I1IiIll11Ill11li11l[1] > 255 then I1IiIll11Ill11li11l[7] = true I1IiIll11Ill11li11l[10] = iilillllilII11lIli1[5][I1IiIll11Ill11li11l[1] - 256] end end end iilillllilII11lIli1[4] = lIliiI1lIlllliI1llI1I() lIliiI1lIlllliI1llI1I() iilillllilII11lIli1[6] = lIliiI1lIlllliI1llI1I() lIliiI1lIlllliI1llI1I() lIliiI1lIlllliI1llI1I() return iilillllilII11lIli1 end local function lIiI1Il1Ii1iililIIl(iilillllilII11lIli1, ii1lli1liili11IIlIi, lIl1Il1111Iii1I1I1I11) local i1iII1i1l1Il1I1lIl1, I111ii1Ii1iIlIllI11 = 1, 13 local ii1IIliii1il1llii1i = iilillllilII11lIli1[2] local lllllil111i11lliIII = 3 local IIlill11li1lliili11 = iilillllilII11lIli1[1] local lIlliiillll1l1Iiii1l1 = iilillllilII11lIli1[6] local Iil1ilIilI11l1ilIiI = iilillllilII11lIli1[4] local II1Il1I111il1ii1Iii = 8 local llIiI111iiIlliIIIli = iilillllilII11lIli1[7] local lIliIi1l111iIi1l11ill = 9 local function lIli1I111ll1liIIilIIl(...) local iIililiIi1I1lii1lil = 0 local l1li1I1lIliI1II1l11 = { liIlI1i1iIllIII11lI({}, 1, Iil1ilIilI11l1ilIiI) } local Iii11IliIlil1i1lIll = 1 local I1IlIlll1i1l1ilil1l = {} local ll11i1liIillIiliiii = {} local ii1lli1liili11IIlIi = lillil1iili111Illii() local IIIIi1lIlI1IlliIIiI = { ... } local IIliiIi1illliili1il = #IIIIi1lIlI1IlliIIiI - 1 for llIlII11i11IliIlll1 = 0, IIliiIi1illliili1il do if llIlII11i11IliIlll1 < lIlliiillll1l1Iiii1l1 then l1li1I1lIliI1II1l11[llIlII11i11IliIlll1] = IIIIi1lIlI1IlliIIiI[llIlII11i11IliIlll1 + 1] end end local function lI1IiiIliiI1l111i1l(...) local I11li1lliiIi1ii1iii = lI1IIIIlIli1I1il1II("#", ...) local iIliIl1ililIl1lI1ll = { ... } return I11li1lliiIi1ii1iii, iIliIl1ililIl1lI1ll end local function lIlllIIIIiil1I1llI1ll() while true do local lIliiIi1lI11Il1iIiIli = ii1IIliii1il1llii1i[Iii11IliIlil1i1lIll] local lIliIiIill1IiIii1l1lI = lIliiIi1lI11Il1iIiIli[8] Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll + 1 if lIliIiIill1IiIii1l1lI < 9 then if lIliIiIill1IiIii1l1lI < 4 then if lIliIiIill1IiIii1l1lI >= 2 then if lIliIiIill1IiIii1l1lI ~= 3 then local Ill1III1iiII1iiiill = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[9]] local I11li1lliiIi1ii1iii if lIliiIi1lI11Il1iIiIli[7] then I11li1lliiIi1ii1iii = lIliiIi1lI11Il1iIiIli[10] else I11li1lliiIi1ii1iii = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[1]] end l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3] + 1] = Ill1III1iiII1iiiill l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = Ill1III1iiII1iiiill[I11li1lliiIi1ii1iii] else l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = ii1lli1liili11IIlIi[lIliiIi1lI11Il1iIiIli[5]] end elseif lIliIiIill1IiIii1l1lI == 1 then l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[9]] elseif lIliiIi1lI11Il1iIiIli[9] == 210 then Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll - 1 ii1IIliii1il1llii1i[Iii11IliIlil1i1lIll] = { [8] = 1, [3] = (lIliiIi1lI11Il1iIiIli[3] - 99) % 256, [9] = (lIliiIi1lI11Il1iIiIli[1] - 99) % 256 } elseif lIliiIi1lI11Il1iIiIli[9] == 224 then Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll - 1 ii1IIliii1il1llii1i[Iii11IliIlil1i1lIll] = { [8] = 17, [3] = (lIliiIi1lI11Il1iIiIli[3] - 36) % 256, [9] = (lIliiIi1lI11Il1iIiIli[1] - 36) % 256 } elseif not not l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] == (lIliiIi1lI11Il1iIiIli[1] == 0) then Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll + 1 end elseif lIliIiIill1IiIii1l1lI < 6 then if lIliIiIill1IiIii1l1lI == 5 then ii1lli1liili11IIlIi[lIliiIi1lI11Il1iIiIli[5]] = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] else l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = { liIlI1i1iIllIII11lI(l1il1ll1i1lllIi1Ill, 1, lIliiIi1lI11Il1iIiIli[9] == 0 and 255 or lIliiIi1lI11Il1iIiIli[9]) } end elseif lIliIiIill1IiIii1l1lI >= 7 then if lIliIiIill1IiIii1l1lI ~= 8 then Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll + (lIliiIi1lI11Il1iIiIli[6] - lIlIiIIlIIiIIllilI1li) else local I1iIlIlliIlilII1IlI, I11li1lliiIi1ii1iii if lIliiIi1lI11Il1iIiIli[2] then I1iIlIlliIlilII1IlI = lIliiIi1lI11Il1iIiIli[4] else I1iIlIlliIlilII1IlI = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[9]] end if lIliiIi1lI11Il1iIiIli[7] then I11li1lliiIi1ii1iii = lIliiIi1lI11Il1iIiIli[10] else I11li1lliiIi1ii1iii = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[1]] end if I1iIlIlliIlilII1IlI == I11li1lliiIi1ii1iii ~= (lIliiIi1lI11Il1iIiIli[3] ~= 0) then Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll + 1 end end else local lII11Ill1l1ii11IIii = IIlill11li1lliili11[lIliiIi1lI11Il1iIiIli[6]] local i11iIilIiIllIliiI11 = {} if lII11Ill1l1ii11IIii[lllllil111i11lliIII] > 0 then do local llI1l11IiiIlliii1ii = {} i11iIilIiIllIliiI11 = lllIiilii111Ilili1l({}, { __index = function(iIliIl1ililIl1lI1ll, iI1l11ii1iI1llli1lI) local i1lIIIllIiliII1Ii1I = llI1l11IiiIlliii1ii[iI1l11ii1iI1llli1lI] return i1lIIIllIiliII1Ii1I[1][i1lIIIllIiliII1Ii1I[2]] end, __newindex = function(iIliIl1ililIl1lI1ll, iI1l11ii1iI1llli1lI, III1llIl1I1l1IIlllI) local i1lIIIllIiliII1Ii1I = llI1l11IiiIlliii1ii[iI1l11ii1iI1llli1lI] i1lIIIllIiliII1Ii1I[1][i1lIIIllIiliII1Ii1I[2]] = III1llIl1I1l1IIlllI end }) for llIlII11i11IliIlll1 = 1, lII11Ill1l1ii11IIii[lllllil111i11lliIII] do local lIlIilii11I1illl1liiI = ii1IIliii1il1llii1i[Iii11IliIlil1i1lIll] if lIlIilii11I1illl1liiI[II1Il1I111il1ii1Iii] == i1iII1i1l1Il1I1lIl1 then llI1l11IiiIlliii1ii[llIlII11i11IliIlll1 - 1] = { l1li1I1lIliI1II1l11, lIlIilii11I1illl1liiI[lIliIi1l111iIi1l11ill] } elseif lIlIilii11I1illl1liiI[II1Il1I111il1ii1Iii] == I111ii1Ii1iIlIllI11 then llI1l11IiiIlliii1ii[llIlII11i11IliIlll1 - 1] = { lIl1Il1111Iii1I1I1I11, lIlIilii11I1illl1liiI[lIliIi1l111iIi1l11ill] } end Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll + 1 end if not I1IlIlll1i1l1ilil1l[l1li1I1lIliI1II1l11] then I1IlIlll1i1l1ilil1l[l1li1I1lIliI1II1l11] = {llI1l11IiiIlliii1ii} else lIliIl1iII1illll1Illl(I1IlIlll1i1l1ilil1l[l1li1I1lIliI1II1l11], llI1l11IiiIlliii1ii) end end end local l1Ilil1IllIIll1i1ll = lIiI1Il1Ii1iililIIl(lII11Ill1l1ii11IIii, ii1lli1liili11IIlIi, i11iIilIiIllIliiI11) l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = l1Ilil1IllIIll1i1ll end elseif lIliIiIill1IiIii1l1lI >= 13 then if lIliIiIill1IiIii1l1lI < 15 then if lIliIiIill1IiIii1l1lI ~= 14 then l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = lIl1Il1111Iii1I1I1I11[lIliiIi1lI11Il1iIiIli[9]] else local iIiII1II1li111I1i1I = (lIliiIi1lI11Il1iIiIli[1] - 1) * 50 local IiIiIll1i1IIIii1l11 = lIliiIi1lI11Il1iIiIli[9] if IiIiIll1i1IIIii1l11 == 0 then IiIiIll1i1IIIii1l11 = iIililiIi1I1lii1lil - lIliiIi1lI11Il1iIiIli[3] end for llIlII11i11IliIlll1 = 1, IiIiIll1i1IIIii1l11 do l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]][iIiII1II1li111I1i1I + llIlII11i11IliIlll1] = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3] + llIlII11i11IliIlll1] end end elseif lIliIiIill1IiIii1l1lI < 16 then l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = lIliiIi1lI11Il1iIiIli[5] elseif lIliIiIill1IiIii1l1lI == 17 then I1IlIlll1i1l1ilil1l[l1li1I1lIliI1II1l11] = nil local IIiIIiI1Iil1Il1ll11 = lIliiIi1lI11Il1iIiIli[3] local lIl11IiI1i1li1Iiill1i = lIliiIi1lI11Il1iIiIli[9] if lIl11IiI1i1li1Iiill1i == 1 then return true end local IiilI1i1illiiI111l1 = IIiIIiI1Iil1Il1ll11 + lIl11IiI1i1li1Iiill1i - 2 if lIl11IiI1i1li1Iiill1i == 0 then IiilI1i1illiiI111l1 = iIililiIi1I1lii1lil end return true, IIiIIiI1Iil1Il1ll11, IiilI1i1illiiI111l1 elseif lIliiIi1lI11Il1iIiIli[1] == 103 then Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll - 1 ii1IIliii1il1llii1i[Iii11IliIlil1i1lIll] = { [8] = 13, [3] = (lIliiIi1lI11Il1iIiIli[3] - 135) % 256, [9] = (lIliiIi1lI11Il1iIiIli[9] - 135) % 256 } else l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = #l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[9]] end elseif lIliIiIill1IiIii1l1lI < 11 then if lIliIiIill1IiIii1l1lI ~= 10 then local IIiIIiI1Iil1Il1ll11 = lIliiIi1lI11Il1iIiIli[3] local IIIIi1lIlI1IlliIIiI = lIliiIi1lI11Il1iIiIli[9] local lliiIIIiIIilIlii11i = lIliiIi1lI11Il1iIiIli[1] local lIlIIl1liIlII1iiIl1, IiilI1i1illiiI111l1, lIlllIIIIiil1I1llI1ll if IIIIi1lIlI1IlliIIiI ~= 1 then if IIIIi1lIlI1IlliIIiI ~= 0 then IiilI1i1illiiI111l1 = IIiIIiI1Iil1Il1ll11 + IIIIi1lIlI1IlliIIiI - 1 else IiilI1i1illiiI111l1 = iIililiIi1I1lii1lil end IiilI1i1illiiI111l1, lIlIIl1liIlII1iiIl1 = lI1IiiIliiI1l111i1l(l1li1I1lIliI1II1l11[IIiIIiI1Iil1Il1ll11](liIlI1i1iIllIII11lI(l1li1I1lIliI1II1l11, IIiIIiI1Iil1Il1ll11 + 1, IiilI1i1illiiI111l1))) else IiilI1i1illiiI111l1, lIlIIl1liIlII1iiIl1 = lI1IiiIliiI1l111i1l(l1li1I1lIliI1II1l11[IIiIIiI1Iil1Il1ll11]()) end if lliiIIIiIIilIlii11i ~= 1 then if lliiIIIiIIilIlii11i ~= 0 then IiilI1i1illiiI111l1 = IIiIIiI1Iil1Il1ll11 + lliiIIIiIIilIlii11i - 2 iIililiIi1I1lii1lil = IiilI1i1illiiI111l1 + 1 else IiilI1i1illiiI111l1 = IiilI1i1illiiI111l1 + IIiIIiI1Iil1Il1ll11 - 1 iIililiIi1I1lii1lil = IiilI1i1illiiI111l1 end lIlllIIIIiil1I1llI1ll = 0 for llIlII11i11IliIlll1 = IIiIIiI1Iil1Il1ll11, IiilI1i1illiiI111l1 do lIlllIIIIiil1I1llI1ll = lIlllIIIIiil1I1llI1ll + 1 l1li1I1lIliI1II1l11[llIlII11i11IliIlll1] = lIlIIl1liIlII1iiIl1[lIlllIIIIiil1I1llI1ll] end else iIililiIi1I1lii1lil = IIiIIiI1Iil1Il1ll11 - 1 end for llIlII11i11IliIlll1 = iIililiIi1I1lii1lil + 1, Iil1ilIilI11l1ilIiI do l1li1I1lIliI1II1l11[llIlII11i11IliIlll1] = nil end else local I11li1lliiIi1ii1iii if lIliiIi1lI11Il1iIiIli[7] then I11li1lliiIi1ii1iii = lIliiIi1lI11Il1iIiIli[10] else I11li1lliiIi1ii1iii = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[1]] end l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[9]][I11li1lliiIi1ii1iii] end elseif lIliIiIill1IiIii1l1lI ~= 12 then local I1iIlIlliIlilII1IlI, I11li1lliiIi1ii1iii if lIliiIi1lI11Il1iIiIli[2] then I1iIlIlliIlilII1IlI = lIliiIi1lI11Il1iIiIli[4] else I1iIlIlliIlilII1IlI = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[9]] end if lIliiIi1lI11Il1iIiIli[7] then I11li1lliiIi1ii1iii = lIliiIi1lI11Il1iIiIli[10] else I11li1lliiIi1ii1iii = l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[1]] end l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]][I1iIlIlliIlilII1IlI] = I11li1lliiIi1ii1iii else l1li1I1lIliI1II1l11[lIliiIi1lI11Il1iIiIli[3]] = lIliiIi1lI11Il1iIiIli[9] ~= 0 if lIliiIi1lI11Il1iIiIli[1] ~= 0 then Iii11IliIlil1i1lIll = Iii11IliIlil1i1lIll + 1 end end end end local lIlIili11II11IiIli1I1, lIII1Iill1iIiiI1IIl, l1li1i1IIililiIl11i, ll1lllii11lIi1i1II1 = lIli1Ii111lII1iil1lII(lIlllIIIIiil1I1llI1ll) if lIlIili11II11IiIli1I1 then if l1li1i1IIililiIl11i then return liIlI1i1iIllIII11lI(l1li1I1lIliI1II1l11, l1li1i1IIililiIl11i, ll1lllii11lIi1i1II1) end else il1IIiil11iiI1IlilI("Luraph Script:" .. (llIiI111iiIlliIIIli[Iii11IliIlil1i1lIll - 1] or "") .. ": " .. lIli1I11I1IiI1l1ii1il(lIII1Iill1iIiiI1IIl), 0) end end l1il1Ii1I11iIiil11i(lIli1I111ll1liIIilIIl, ii1lli1liili11IIlIi) return lIli1I111ll1liIIilIIl end local iil1I11Illi1IiIli11 = i1iilll1iIIliii1i1l() return lIiI1Il1Ii1iililIIl(iil1I11Illi1IiIli11, ii1lli1liili11IIlIi)() end Ii1I1l1111Ili111iilillil1iili111Illii())
