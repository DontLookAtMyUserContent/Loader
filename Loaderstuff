function E()
local lIliIilillIIli1l11ilI = assert local lIIIIIi1I1I11lIIii1 = select local lilI1i1liI1l1lillil = tonumber local I1Ii1liIIi1ilillIii = unpack local lIl1Il1l1Ili1llIl1i1l = pcall local Il1lllI11iiIiiIIi11 = setfenv local iIil1lI11llIiI11lil = setmetatable local lIlll1i11il1iiI11Il1I = type local lIli1IIilI1II1Ililiii = getfenv local iilIIIIl1i1Iii111ii = tostring local llIlllII1Ii1lliIll1 = error local ilI1iIlili111ii1lii = string.sub local Ill1I1llIlIiiIllIlI = string.byte local Ii1l1Iill11i1I1il1i = string.char local iilIiiiliiil11l1lli = string.rep local I1iillili1Il1l1i1Il = string.gsub local iiiIiiIillI1IlIllli = string.match local lIlI1iI1Ili1l1i1I1iIl = table.insert local iI1IIIlilli1lI1iiiI = Ill1I1llIlIiiIllIlI("p", 1) local l11liIlliilIllIlIll, l1ll1ll1lI1l1iIIiIl = #{5329}, #{ 4371, 1512, 2339, 5886, 5564, 4553, 1562, 3451, 4263, 6779, 1670, 2783, 3132, 1450, 6557, 270, 821, 1506, 3588, 390, 4010 } + iI1IIIlilli1lI1iiiI + 130938 local llIliiliii1IilI1iIl = {} local l1liiII1IIi1illl1II = 1 local lIlIiii11IiiII1ll1Ill, l1iiiIiiIIIIlIIiili local function IlllI1Iii1Il111i1II(I1iI1Ii1Il11lIlIi1l, IIIIl1i1l1lilil11iI) local lIlil11111l11lI1iIlIi I1iI1Ii1Il11lIlIi1l = I1iillili1Il1l1i1Il(ilI1iIlili111ii1lii(I1iI1Ii1Il11lIlIi1l, 5), "..", function(IllIIl11ill1i1IIlIl) if Ill1I1llIlIiiIllIlI(IllIIl11ill1i1IIlIl, 2) == 72 then lIlil11111l11lI1iIlIi = lilI1i1liI1l1lillil(ilI1iIlili111ii1lii(IllIIl11ill1i1IIlIl, 1, 1)) return "" else local iIllliiIiilI11I11Ii = Ii1l1Iill11i1I1il1i(lilI1i1liI1l1lillil(IllIIl11ill1i1IIlIl, 16)) if lIlil11111l11lI1iIlIi then local I1ii1IiI11llIlIllii = iilIiiiliiil11l1lli(iIllliiIiilI11I11Ii, lIlil11111l11lI1iIlIi) lIlil11111l11lI1iIlIi = nil return I1ii1IiI11llIlIllii else return iIllliiIiilI11I11Ii end end end) local function iIi1IIl1ll1il11ii1l() local i1ll1iIi1I1IiII1lIi = Ill1I1llIlIiiIllIlI(I1iI1Ii1Il11lIlIi1l, l1liiII1IIi1illl1II, l1liiII1IIi1illl1II) l1liiII1IIi1illl1II = l1liiII1IIi1illl1II + 1 return i1ll1iIi1I1IiII1lIi end local function lIliilIIi1IIIiiiIl1ii() local i1ll1iIi1I1IiII1lIi, iIllliiIiilI11I11Ii, I1ii1IiI11llIlIllii, lIlll11llii1IlliIIl = Ill1I1llIlIiiIllIlI(I1iI1Ii1Il11lIlIi1l, l1liiII1IIi1illl1II, l1liiII1IIi1illl1II + 3) l1liiII1IIi1illl1II = l1liiII1IIi1illl1II + 4 return lIlll11llii1IlliIIl * 16777216 + I1ii1IiI11llIlIllii * 65536 + iIllliiIiilI11I11Ii * 256 + i1ll1iIi1I1IiII1lIi end local function ili1ilIII1I1iiIl1ll(ii11iliIIii1I1Il1li, lIll1II11iIIIIliIilIi, IlliiliilII1illii1i) if IlliiliilII1illii1i then local I1IlIiIlII1iIi1llii, ii1IIil1iliiiI11Iil = 0, 0 for iIIII111liiIi11III1 = lIll1II11iIIIIliIilIi, IlliiliilII1illii1i do I1IlIiIlII1iIi1llii = I1IlIiIlII1iIi1llii + 2 ^ ii1IIil1iliiiI11Iil * ili1ilIII1I1iiIl1ll(ii11iliIIii1I1Il1li, iIIII111liiIi11III1) ii1IIil1iliiiI11Iil = ii1IIil1iliiiI11Iil + 1 end return I1IlIiIlII1iIi1llii else local iiIIillllllIlI1Iili = 2 ^ (lIll1II11iIIIIliIilIi - 1) return iiIIillllllIlI1Iili <= ii11iliIIii1I1Il1li % (iiIIillllllIlI1Iili + iiIIillllllIlI1Iili) and 1 or 0 end end local function Iiill1llIi11I11l11l() local i1ll1iIi1I1IiII1lIi, iIllliiIiilI11I11Ii = lIliilIIi1IIIiiiIl1ii(), lIliilIIi1IIIiiiIl1ii() if i1ll1iIi1I1IiII1lIi == 0 and iIllliiIiilI11I11Ii == 0 then return 0 end return (-2 * ili1ilIII1I1iiIl1ll(iIllliiIiilI11I11Ii, 32) + 1) * 2 ^ (ili1ilIII1I1iiIl1ll(iIllliiIiilI11I11Ii, 21, 31) - 1023) * ((ili1ilIII1I1iiIl1ll(iIllliiIiilI11I11Ii, 1, 20) * 4294967296 + i1ll1iIi1I1IiII1lIi) / 4503599627370496 + 1) end local III1Il1iIli11li11ll = bit or bit32 local IiI1l1Iiliil1IliI1I = III1Il1iIli11li11ll and III1Il1iIli11li11ll.bxor or function(i1ll1iIi1I1IiII1lIi, iIllliiIiilI11I11Ii) local iIil1I1i1I1lIII1IiI = 1 local I1ii1IiI11llIlIllii = 0 while i1ll1iIi1I1IiII1lIi > 0 and iIllliiIiilI11I11Ii > 0 do local lIl1ll1lliIIlIi1li1iI = i1ll1iIi1I1IiII1lIi % 2 local lIiiill1IiiI11i11Ii = iIllliiIiilI11I11Ii % 2 if lIl1ll1lliIIlIi1li1iI ~= lIiiill1IiiI11i11Ii then I1ii1IiI11llIlIllii = I1ii1IiI11llIlIllii + iIil1I1i1I1lIII1IiI end i1ll1iIi1I1IiII1lIi = (i1ll1iIi1I1IiII1lIi - lIl1ll1lliIIlIi1li1iI) / 2 iIllliiIiilI11I11Ii = (iIllliiIiilI11I11Ii - lIiiill1IiiI11i11Ii) / 2 iIil1I1i1I1lIII1IiI = iIil1I1i1I1lIII1IiI * 2 end if i1ll1iIi1I1IiII1lIi < iIllliiIiilI11I11Ii then i1ll1iIi1I1IiII1lIi = iIllliiIiilI11I11Ii end while i1ll1iIi1I1IiII1lIi > 0 do local lIl1ll1lliIIlIi1li1iI = i1ll1iIi1I1IiII1lIi % 2 if lIl1ll1lliIIlIi1li1iI > 0 then I1ii1IiI11llIlIllii = I1ii1IiI11llIlIllii + iIil1I1i1I1lIII1IiI end i1ll1iIi1I1IiII1lIi = (i1ll1iIi1I1IiII1lIi - lIl1ll1lliIIlIi1li1iI) / 2 iIil1I1i1I1lIII1IiI = iIil1I1i1I1lIII1IiI * 2 end return I1ii1IiI11llIlIllii end local function iliII1I1IlIIllllli1(lIlI1l1llI11l1lIIl1l1) local lililIiiI11i11ill1i = { Ill1I1llIlIiiIllIlI(I1iI1Ii1Il11lIlIi1l, l1liiII1IIi1illl1II, l1liiII1IIi1illl1II + 3) } l1liiII1IIi1illl1II = l1liiII1IIi1illl1II + 4 local i1ll1iIi1I1IiII1lIi = IiI1l1Iiliil1IliI1I(lililIiiI11i11ill1i[1], l1iiiIiiIIIIlIIiili) local iIllliiIiilI11I11Ii = IiI1l1Iiliil1IliI1I(lililIiiI11i11ill1i[2], l1iiiIiiIIIIlIIiili) local I1ii1IiI11llIlIllii = IiI1l1Iiliil1IliI1I(lililIiiI11i11ill1i[3], l1iiiIiiIIIIlIIiili) local lIlll11llii1IlliIIl = IiI1l1Iiliil1IliI1I(lililIiiI11i11ill1i[4], l1iiiIiiIIIIlIIiili) l1iiiIiiIIIIlIIiili = (97 * l1iiiIiiIIIIlIIiili + lIlI1l1llI11l1lIIl1l1) % 256 return lIlll11llii1IlliIIl * 16777216 + I1ii1IiI11llIlIllii * 65536 + iIllliiIiilI11I11Ii * 256 + i1ll1iIi1I1IiII1lIi end local function Ili1l1iII1IiiIiilil(lll1liII11iIIlIliiI) local llli1l1lil1IiI1i1ii = lIliilIIi1IIIiiiIl1ii() local lIiI11IIlI1lI11I11I = "" for iIIII111liiIi11III1 = l11liIlliilIllIlIll, llli1l1lil1IiI1i1ii do lIiI11IIlI1lI11I11I = lIiI11IIlI1lI11I11I .. Ii1l1Iill11i1I1il1i(IiI1l1Iiliil1IliI1I(Ill1I1llIlIiiIllIlI(I1iI1Ii1Il11lIlIi1l, l1liiII1IIi1illl1II + iIIII111liiIi11III1 - 1), lIlIiii11IiiII1ll1Ill)) lIlIiii11IiiII1ll1Ill = (lll1liII11iIIlIliiI * lIlIiii11IiiII1ll1Ill + 251) % 256 end l1liiII1IIi1illl1II = l1liiII1IIi1illl1II + llli1l1lil1IiI1i1ii return lIiI11IIlI1lI11I11I end lIlIiii11IiiII1ll1Ill = iIi1IIl1ll1il11ii1l() l1iiiIiiIIIIlIIiili = iIi1IIl1ll1il11ii1l() local iIil1IIliiII1III1li = {} for iIIII111liiIi11III1 = l11liIlliilIllIlIll, iIi1IIl1ll1il11ii1l() do local iliIii1lliII111IIii = iIi1IIl1ll1il11ii1l() local IlIlIIli1IiiiIlilII = (iIIII111liiIi11III1 - 1) * 2 iIil1IIliiII1III1li[IlIlIIli1IiiiIlilII] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, 1, 4) iIil1IIliiII1III1li[IlIlIIli1IiiiIlilII + 1] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, 5, 8) end local function lIl11illI11llii11l1ii() local ilIIiil1I1IiIil1iI1 = { nil, {}, nil, nil, {}, {}, {} } ilIIiil1I1IiIil1iI1[1] = iIi1IIl1ll1il11ii1l() local I1li1lI1l1IliIIliI1 = lIliilIIi1IIIiiiIl1ii() - (#{ 44, 365, 5943, 5269, 4216, 4649, 769, 3886, 5880, 3746, 3649, 3967, 1757, 5824, 5366, 4631, 1290, 583, 448, 5328, 2495, 4632, 407 } + iI1IIIlilli1lI1iiiI + 133608) local iIl1Il1I1ilIiiiI1il = iIi1IIl1ll1il11ii1l() for iIIII111liiIi11III1 = l11liIlliilIllIlIll, I1li1lI1l1IliIIliI1 do local lIl1I1III1l11iiIIIlil local lIlll1i11il1iiI11Il1I = iIi1IIl1ll1il11ii1l() if lIlll1i11il1iiI11Il1I == #{ 2624, 629, 5467, 6068, 5259, 6291, 4431, 3814, 1072, 635, 1442, 5394, 6966, 2771, 2954, 1359, 3154, 2973, 6942, 4808, 2199, 6623 } + iI1IIIlilli1lI1iiiI + 90 then lIl1I1III1l11iiIIIlil = #{ 6471, 1284, 5356, 5468, 6404, 5235, 518, 2438, 958, 2945, 4230, 5691, 4394, 4812, 3952, 3053, 3038, 5470, 4598, 1763 } + iI1IIIlilli1lI1iiiI + 90792 == #{ 1333, 705, 6055, 6766, 3461, 4742, 1567, 3937, 3173, 3792, 4358, 3856, 1292, 1568, 6868, 3472, 2942, 1919, 784, 254, 2590, 5130 } + iI1IIIlilli1lI1iiiI + 40542 end if lIlll1i11il1iiI11Il1I == #{ 3466, 2840, 2539, 1379, 3933, 552, 6712, 1680, 1484, 4557, 3387, 3612, 6172, 4076, 1077, 3028, 4183, 4167, 985, 1392, 301, 6166, 1589 } + iI1IIIlilli1lI1iiiI + -93 then lIl1I1III1l11iiIIIlil = iIi1IIl1ll1il11ii1l() + lIliilIIi1IIIiiiIl1ii() + Iiill1llIi11I11l11l() end if lIlll1i11il1iiI11Il1I == #{ 6509, 4146, 730, 1261, 1561, 2210, 3395, 6524, 1254, 4134, 1586, 1966, 1884, 4577, 4285, 2514, 5039, 2849, 3581, 3806, 2463 } + iI1IIIlilli1lI1iiiI + -69 then lIl1I1III1l11iiIIIlil = iIi1IIl1ll1il11ii1l() end if lIlll1i11il1iiI11Il1I == #{ 177, 25, 3470, 5811, 2656, 4585, 408, 813, 6547, 5477, 3875, 6112, 6234, 6699 } then lIl1I1III1l11iiIIIlil = ilI1iIlili111ii1lii(Ili1l1iII1IiiIiilil(insEncKey), #{ 4928, 409, 4398 }) end if lIlll1i11il1iiI11Il1I == #{ 4264, 2334, 2369, 1743, 3486, 4221, 2912, 307, 5767, 2350, 2421, 6841, 1312, 3947, 300, 5365 } then lIl1I1III1l11iiIIIlil = iIi1IIl1ll1il11ii1l() end if lIlll1i11il1iiI11Il1I == #{ 2032, 6528, 417, 5611, 1938, 4409, 4219, 2341, 859, 2562, 4109, 1981, 1672, 1697, 270, 328, 2651, 2803, 2774, 1240, 4054 } + iI1IIIlilli1lI1iiiI + -102 then lIl1I1III1l11iiIIIlil = ilI1iIlili111ii1lii(Ili1l1iII1IiiIiilil(iIl1Il1I1ilIiiiI1il), #{ 34, 2469, 2062, 6623 }) end if lIlll1i11il1iiI11Il1I == #{ 1903, 5158, 6440, 3142, 5188, 277, 2345, 3354, 1552, 4859, 4153, 4345, 4010, 5008, 5878, 6319, 113, 2127, 1400, 5232, 2331, 1731, 1606 } + iI1IIIlilli1lI1iiiI + -1 then lIl1I1III1l11iiIIIlil = ilI1iIlili111ii1lii(Ili1l1iII1IiiIiilil(iIl1Il1I1ilIiiiI1il), #{5485, 6955}) end if lIlll1i11il1iiI11Il1I == #{ 1048, 4102, 2937, 6435, 384, 3829, 3602, 4004, 5620, 2021, 6651, 3111, 2924, 5273, 2354, 198, 4126, 1892, 5682, 685, 3222, 5433, 353, 3907 } + iI1IIIlilli1lI1iiiI + 43 then lIl1I1III1l11iiIIIlil = Iiill1llIi11I11l11l() end if lIlll1i11il1iiI11Il1I == #{ 3049, 5128, 5441, 5016, 884, 702, 303, 1438, 1334, 3631, 3317, 3325, 304, 498, 6317, 4873, 4922, 2301, 3403, 1861, 2130, 2602, 137, 3440 } + iI1IIIlilli1lI1iiiI + 19 then lIl1I1III1l11iiIIIlil = #{ 6185, 6227, 2685, 4251, 6573, 5562, 4295, 4919, 1215, 3399, 6744, 190, 4672, 3806, 3088, 2910, 313, 2490, 2119, 5292, 5861, 5485, 4650 } + iI1IIIlilli1lI1iiiI + 38288 == #{ 6185, 6227, 2685, 4251, 6573, 5562, 4295, 4919, 1215, 3399, 6744, 190, 4672, 3806, 3088, 2910, 313, 2490, 2119, 5292, 5861, 5485, 4650 } + iI1IIIlilli1lI1iiiI + 38288 end ilIIiil1I1IiIil1iI1[7][iIIII111liiIi11III1 - l11liIlliilIllIlIll] = lIl1I1III1l11iiIIIlil end ilIIiil1I1IiIil1iI1[3] = iIi1IIl1ll1il11ii1l() local I1li1lI1l1IliIIliI1 = lIliilIIi1IIIiiiIl1ii() for iIIII111liiIi11III1 = l11liIlliilIllIlIll, I1li1lI1l1IliIIliI1 do ilIIiil1I1IiIil1iI1[2][iIIII111liiIi11III1] = lIliilIIi1IIIiiiIl1ii() end lIliilIIi1IIIiiiIl1ii() lIliilIIi1IIIiiiIl1ii() local llIll1lIiliiiiI1i11 = lIliilIIi1IIIiiiIl1ii() - (#{ 3388, 606, 3730, 2637, 3900, 264, 582, 5590, 6604, 3222, 2638, 4036, 1050, 6707, 4032, 5074, 5674, 2769, 2893, 3054, 4054, 4376, 3545, 2202 } + iI1IIIlilli1lI1iiiI + 133636) local II1llll1llIlI1Iii11 = iIi1IIl1ll1il11ii1l() for iIIII111liiIi11III1 = l11liIlliilIllIlIll, llIll1lIiliiiiI1i11 do local ilIIIii1iIl11I1Ilii = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iliIii1lliII111IIii = iliII1I1IlIIllllli1(II1llll1llIlI1Iii11) ilIIIii1iIl11I1Ilii[129735] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, #{ 6420, 5065, 6467, 5434, 1177, 4476, 1811, 3443, 5206, 6309 }, #{ 3035, 2359, 2865, 2222, 3030, 1783, 657, 2028, 2982, 681, 3763, 1219, 2649, 3140, 2459, 3443, 4914, 6710 }) ilIIIii1iIl11I1Ilii[10] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, #{6311}, #{ 4051, 1502, 177, 932, 85, 6182, 2362, 2350, 5520, 1586, 2941, 104, 3471, 3540, 352, 5262, 4689, 6539 }) ilIIIii1iIl11I1Ilii[1] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, #{ 4010, 2830, 1892, 5764, 2045, 3564, 284, 6584, 1037, 3488 }, #{ 1152, 650, 1951, 5059, 6627, 2993, 5045, 1022, 2594, 25, 1011, 5575, 188, 726, 6336, 3797, 4007, 5925 }) ilIIIii1iIl11I1Ilii[5] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, #{3675}, #{ 3255, 4717, 5038, 4049, 435, 5607, 2875, 2083, 1891 }) ilIIIii1iIl11I1Ilii[9] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, #{ 409, 6300, 4569, 6869, 3761, 501, 5938, 530, 2628, 2984, 2744, 2442, 2061, 6539, 612, 737, 3596, 1683, 1980, 4922, 3345, 1386, 1955, 4221 } + iI1IIIlilli1lI1iiiI + -109, #{ 4160, 4916, 1889, 4283, 4305, 2259, 2452, 6820, 4332, 1178, 5867, 6516, 5945, 236, 4964, 4107, 2500, 1912, 3915, 1704, 549, 170, 3131 } + iI1IIIlilli1lI1iiiI + -103) ilIIIii1iIl11I1Ilii[4] = ili1ilIII1I1iiIl1ll(iliIii1lliII111IIii, #{ 4552, 3301, 3848, 6301, 3713, 4942, 565, 5398, 1184, 2421, 5285, 5634, 675, 1025, 2209, 6482, 239, 1321, 5953 }, #{ 5080, 6325, 102, 6397, 6913, 3816, 512, 509, 2206, 1594, 2390, 2482, 2907, 5688, 2493, 466, 776, 5622, 4876, 4867, 4198 } + iI1IIIlilli1lI1iiiI + -107) ilIIiil1I1IiIil1iI1[6][iIIII111liiIi11III1] = ilIIIii1iIl11I1Ilii end for iIIII111liiIi11III1 = l11liIlliilIllIlIll, llIll1lIiliiiiI1i11 do local ilIIIii1iIl11I1Ilii = ilIIiil1I1IiIil1iI1[6][iIIII111liiIi11III1] local ii1I1l11l1llIliIIil = iIil1IIliiII1III1li[ilIIIii1iIl11I1Ilii[9]] if ii1I1l11l1llIliIIil == #{3139} and ilIIIii1iIl11I1Ilii[5] > 255 then ilIIIii1iIl11I1Ilii[2] = true ilIIIii1iIl11I1Ilii[3] = ilIIiil1I1IiIil1iI1[7][ilIIIii1iIl11I1Ilii[5] - 256] end if ii1I1l11l1llIliIIil == #{6223, 5179} and ilIIIii1iIl11I1Ilii[1] > 255 then ilIIIii1iIl11I1Ilii[7] = true ilIIIii1iIl11I1Ilii[6] = ilIIiil1I1IiIil1iI1[7][ilIIIii1iIl11I1Ilii[1] - 256] end if ii1I1l11l1llIliIIil == #{ 840, 563, 1374, 4741 } then ilIIIii1iIl11I1Ilii[8] = ilIIiil1I1IiIil1iI1[7][ilIIIii1iIl11I1Ilii[10]] end if ii1I1l11l1llIliIIil == #{ 1513, 325, 2048 } then if ilIIIii1iIl11I1Ilii[5] > 255 then ilIIIii1iIl11I1Ilii[2] = true ilIIIii1iIl11I1Ilii[3] = ilIIiil1I1IiIil1iI1[7][ilIIIii1iIl11I1Ilii[5] - 256] end if ilIIIii1iIl11I1Ilii[1] > 255 then ilIIIii1iIl11I1Ilii[7] = true ilIIIii1iIl11I1Ilii[6] = ilIIiil1I1IiIil1iI1[7][ilIIIii1iIl11I1Ilii[1] - 256] end end end iIi1IIl1ll1il11ii1l() ilIIiil1I1IiIil1iI1[4] = iIi1IIl1ll1il11ii1l() iIi1IIl1ll1il11ii1l() local I1li1lI1l1IliIIliI1 = lIliilIIi1IIIiiiIl1ii() for iIIII111liiIi11III1 = l11liIlliilIllIlIll, I1li1lI1l1IliIIliI1 do ilIIiil1I1IiIil1iI1[5][iIIII111liiIi11III1 - l11liIlliilIllIlIll] = lIl11illI11llii11l1ii() end return ilIIiil1I1IiIil1iI1 end local function lIll1ililIl1l1Ii1lIii(ilIIiil1I1IiIil1iI1, IIIIl1i1l1lilil11iI, lIliII11IIil11III1I1I) local ll1IIlIi1iIl111IIli, lIllilIIIIIiliIIilill = 7, 10 local liI1III1IIIiliI1iIl = ilIIiil1I1IiIil1iI1[6] local lIlIiiIllllI1IlliI1li = 3 local l1llIl1liIIII11l1iI = ilIIiil1I1IiIil1iI1[5] local lIl1I11l1IIIl1l1i11 = ilIIiil1I1IiIil1iI1[1] local ii1Iiiili1111I1il1i = ilIIiil1I1IiIil1iI1[4] local Illi1iIlIIi1IliliI1 = 9 local lii1il11lIllI11I1i1 = ilIIiil1I1IiIil1iI1[2] local lIl11iii1ill1lIIllilI = 5 local function lIl1lil111iliIlII1I(...) local lIlI1IiII1iI1II11iI1i = 0 local IiiliIiiIIiililIliI = { I1Ii1liIIi1ilillIii({}, 1, ii1Iiiili1111I1il1i) } local ii1lili1iill1lIil1i = 1 local iIi1Il1l1illilill1l = {} local Illli1IiIIll1lillII = {} local IIIIl1i1l1lilil11iI = lIli1IIilI1II1Ililiii() local llI1i1III11II1Ii1ii = { ... } local IIli1Ill1illIIllIlI = #llI1i1III11II1Ii1ii - 1 for iIIII111liiIi11III1 = 0, IIli1Ill1illIIllIlI do if iIIII111liiIi11III1 < lIl1I11l1IIIl1l1i11 then IiiliIiiIIiililIliI[iIIII111liiIi11III1] = llI1i1III11II1Ii1ii[iIIII111liiIi11III1 + 1] end end local function lIl1IlIl111Ili1li1lil(...) local I1ii1IiI11llIlIllii = lIIIIIi1I1I11lIIii1("#", ...) local ii11iiiiiI1IilIiIlI = { ... } return I1ii1IiI11llIlIllii, ii11iiiiiI1IilIiIlI end local function lIl1I11l11Ill1lIIi1ii() while true do local ii1111II1iIlIlI11lI = liI1III1IIIiliI1iIl[ii1lili1iill1lIil1i] local ii11i1iIIII1III11ll = ii1111II1iIlIlI11lI[9] ii1lili1iill1lIil1i = ii1lili1iill1lIil1i + 1 if ii11i1iIIII1III11ll >= 9 then if ii11i1iIIII1III11ll >= 13 then if ii11i1iIIII1III11ll >= 15 then if ii11i1iIIII1III11ll >= 16 then if ii11i1iIIII1III11ll == 17 then local IlIlIIli1IiiiIlilII = (ii1111II1iIlIlI11lI[1] - 1) * 50 local liI1I11IIl1l1liiil1 = ii1111II1iIlIlI11lI[5] if liI1I11IIl1l1liiil1 == 0 then liI1I11IIl1l1liiil1 = lIlI1IiII1iI1II11iI1i - ii1111II1iIlIlI11lI[4] end for iIIII111liiIi11III1 = 1, liI1I11IIl1l1liiil1 do IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]][IlIlIIli1IiiiIlilII + iIIII111liiIi11III1] = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4] + iIIII111liiIi11III1] end elseif ii1111II1iIlIlI11lI[1] == 236 then ii1lili1iill1lIil1i = ii1lili1iill1lIil1i - 1 liI1III1IIIiliI1iIl[ii1lili1iill1lIil1i] = { [9] = 10, [4] = (ii1111II1iIlIlI11lI[4] - 201) % 256, [5] = (ii1111II1iIlIlI11lI[5] - 201) % 256 } else IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = #IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[5]] end else local I1ii1IiI11llIlIllii if ii1111II1iIlIlI11lI[7] then I1ii1IiI11llIlIllii = ii1111II1iIlIlI11lI[6] else I1ii1IiI11llIlIllii = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[1]] end IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[5]][I1ii1IiI11llIlIllii] end elseif ii11i1iIIII1III11ll == 14 then IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = ii1111II1iIlIlI11lI[5] ~= 0 if ii1111II1iIlIlI11lI[1] ~= 0 then ii1lili1iill1lIil1i = ii1lili1iill1lIil1i + 1 end else IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = IIIIl1i1l1lilil11iI[ii1111II1iIlIlI11lI[8]] end elseif ii11i1iIIII1III11ll >= 11 then if ii11i1iIIII1III11ll == 12 then if ii1111II1iIlIlI11lI[5] == 217 then ii1lili1iill1lIil1i = ii1lili1iill1lIil1i - 1 liI1III1IIIiliI1iIl[ii1lili1iill1lIil1i] = { [9] = 11, [4] = (ii1111II1iIlIlI11lI[4] - 150) % 256, [5] = (ii1111II1iIlIlI11lI[1] - 150) % 256 } elseif not not IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] == (ii1111II1iIlIlI11lI[1] == 0) then ii1lili1iill1lIil1i = ii1lili1iill1lIil1i + 1 end else iIi1Il1l1illilill1l[IiiliIiiIIiililIliI] = nil local I1IIIiI1ii1i11liI1I = ii1111II1iIlIlI11lI[4] local liIiillIilII11iIliI = ii1111II1iIlIlI11lI[5] if liIiillIilII11iIliI == 1 then return true end local Ii1i1IiiliIiIIll11I = I1IIIiI1ii1i11liI1I + liIiillIilII11iIliI - 2 if liIiillIilII11iIliI == 0 then Ii1i1IiiliIiIIll11I = lIlI1IiII1iI1II11iI1i end return true, I1IIIiI1ii1i11liI1I, Ii1i1IiiliIiIIll11I end elseif ii11i1iIIII1III11ll ~= 10 then ii1lili1iill1lIil1i = ii1lili1iill1lIil1i + (ii1111II1iIlIlI11lI[10] - l1ll1ll1lI1l1iIIiIl) elseif ii1111II1iIlIlI11lI[1] == 182 then ii1lili1iill1lIil1i = ii1lili1iill1lIil1i - 1 liI1III1IIIiliI1iIl[ii1lili1iill1lIil1i] = { [9] = 7, [4] = (ii1111II1iIlIlI11lI[4] - 117) % 256, [5] = (ii1111II1iIlIlI11lI[5] - 117) % 256 } else IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = lIliII11IIil11III1I1I[ii1111II1iIlIlI11lI[5]] end elseif ii11i1iIIII1III11ll < 4 then if ii11i1iIIII1III11ll < 2 then if ii11i1iIIII1III11ll == 1 then local I1IIIiI1ii1i11liI1I = ii1111II1iIlIlI11lI[4] local llI1i1III11II1Ii1ii = ii1111II1iIlIlI11lI[5] local II1IIilI11iiiIIIlII = ii1111II1iIlIlI11lI[1] local iiilIl1l1iII1IIl1II, Ii1i1IiiliIiIIll11I, lIl1I11l11Ill1lIIi1ii if llI1i1III11II1Ii1ii ~= 1 then if llI1i1III11II1Ii1ii ~= 0 then Ii1i1IiiliIiIIll11I = I1IIIiI1ii1i11liI1I + llI1i1III11II1Ii1ii - 1 else Ii1i1IiiliIiIIll11I = lIlI1IiII1iI1II11iI1i end Ii1i1IiiliIiIIll11I, iiilIl1l1iII1IIl1II = lIl1IlIl111Ili1li1lil(IiiliIiiIIiililIliI[I1IIIiI1ii1i11liI1I](I1Ii1liIIi1ilillIii(IiiliIiiIIiililIliI, I1IIIiI1ii1i11liI1I + 1, Ii1i1IiiliIiIIll11I))) else Ii1i1IiiliIiIIll11I, iiilIl1l1iII1IIl1II = lIl1IlIl111Ili1li1lil(IiiliIiiIIiililIliI[I1IIIiI1ii1i11liI1I]()) end if II1IIilI11iiiIIIlII ~= 1 then if II1IIilI11iiiIIIlII ~= 0 then Ii1i1IiiliIiIIll11I = I1IIIiI1ii1i11liI1I + II1IIilI11iiiIIIlII - 2 lIlI1IiII1iI1II11iI1i = Ii1i1IiiliIiIIll11I + 1 else Ii1i1IiiliIiIIll11I = Ii1i1IiiliIiIIll11I + I1IIIiI1ii1i11liI1I - 1 lIlI1IiII1iI1II11iI1i = Ii1i1IiiliIiIIll11I end lIl1I11l11Ill1lIIi1ii = 0 for iIIII111liiIi11III1 = I1IIIiI1ii1i11liI1I, Ii1i1IiiliIiIIll11I do lIl1I11l11Ill1lIIi1ii = lIl1I11l11Ill1lIIi1ii + 1 IiiliIiiIIiililIliI[iIIII111liiIi11III1] = iiilIl1l1iII1IIl1II[lIl1I11l11Ill1lIIi1ii] end else lIlI1IiII1iI1II11iI1i = I1IIIiI1ii1i11liI1I - 1 end for iIIII111liiIi11III1 = lIlI1IiII1iI1II11iI1i + 1, ii1Iiiili1111I1il1i do IiiliIiiIIiililIliI[iIIII111liiIi11III1] = nil end else IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = { I1Ii1liIIi1ilillIii(llIliiliii1IilI1iIl, 1, ii1111II1iIlIlI11lI[5] == 0 and 255 or ii1111II1iIlIlI11lI[5]) } end elseif ii11i1iIIII1III11ll == 3 then local lIl1Iii1IIIiiIlI1Illi = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[5]] local I1ii1IiI11llIlIllii if ii1111II1iIlIlI11lI[7] then I1ii1IiI11llIlIllii = ii1111II1iIlIlI11lI[6] else I1ii1IiI11llIlIllii = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[1]] end IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4] + 1] = lIl1Iii1IIIiiIlI1Illi IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = lIl1Iii1IIIiiIlI1Illi[I1ii1IiI11llIlIllii] else local iIllliiIiilI11I11Ii, I1ii1IiI11llIlIllii if ii1111II1iIlIlI11lI[2] then iIllliiIiilI11I11Ii = ii1111II1iIlIlI11lI[3] else iIllliiIiilI11I11Ii = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[5]] end if ii1111II1iIlIlI11lI[7] then I1ii1IiI11llIlIllii = ii1111II1iIlIlI11lI[6] else I1ii1IiI11llIlIllii = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[1]] end IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]][iIllliiIiilI11I11Ii] = I1ii1IiI11llIlIllii end elseif ii11i1iIIII1III11ll < 6 then if ii11i1iIIII1III11ll == 5 then IIIIl1i1l1lilil11iI[ii1111II1iIlIlI11lI[8]] = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] else IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = ii1111II1iIlIlI11lI[8] end elseif ii11i1iIIII1III11ll < 7 then local iIllliiIiilI11I11Ii, I1ii1IiI11llIlIllii if ii1111II1iIlIlI11lI[2] then iIllliiIiilI11I11Ii = ii1111II1iIlIlI11lI[3] else iIllliiIiilI11I11Ii = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[5]] end if ii1111II1iIlIlI11lI[7] then I1ii1IiI11llIlIllii = ii1111II1iIlIlI11lI[6] else I1ii1IiI11llIlIllii = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[1]] end if iIllliiIiilI11I11Ii == I1ii1IiI11llIlIllii ~= (ii1111II1iIlIlI11lI[4] ~= 0) then ii1lili1iill1lIil1i = ii1lili1iill1lIil1i + 1 end elseif ii11i1iIIII1III11ll ~= 8 then IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[5]] else local liI1iiI1i11lIilIIIl = l1llIl1liIIII11l1iI[ii1111II1iIlIlI11lI[10]] local l1iIIlIiIiilII1Ii1I = {} if liI1iiI1i11lIilIIIl[lIlIiiIllllI1IlliI1li] > 0 then do local illIl1lIII1lliI1I1I = {} l1iIIlIiIiilII1Ii1I = iIil1lI11llIiI11lil({}, { __index = function(ii11iiiiiI1IilIiIlI, Ill1IIi1iliii11lllI) local IiIlliIiIiil1ill1lI = illIl1lIII1lliI1I1I[Ill1IIi1iliii11lllI] return IiIlliIiIiil1ill1lI[1][IiIlliIiIiil1ill1lI[2]] end, __newindex = function(ii11iiiiiI1IilIiIlI, Ill1IIi1iliii11lllI, lIl11liIilI11i1I1I1l1) local IiIlliIiIiil1ill1lI = illIl1lIII1lliI1I1I[Ill1IIi1iliii11lllI] IiIlliIiIiil1ill1lI[1][IiIlliIiIiil1ill1lI[2]] = lIl11liIilI11i1I1I1l1 end }) for iIIII111liiIi11III1 = 1, liI1iiI1i11lIilIIIl[lIlIiiIllllI1IlliI1li] do local iI1lI1iiIlllilIiiI1 = liI1III1IIIiliI1iIl[ii1lili1iill1lIil1i] if iI1lI1iiIlllilIiiI1[Illi1iIlIIi1IliliI1] == ll1IIlIi1iIl111IIli then illIl1lIII1lliI1I1I[iIIII111liiIi11III1 - 1] = { IiiliIiiIIiililIliI, iI1lI1iiIlllilIiiI1[lIl11iii1ill1lIIllilI] } elseif iI1lI1iiIlllilIiiI1[Illi1iIlIIi1IliliI1] == lIllilIIIIIiliIIilill then illIl1lIII1lliI1I1I[iIIII111liiIi11III1 - 1] = { lIliII11IIil11III1I1I, iI1lI1iiIlllilIiiI1[lIl11iii1ill1lIIllilI] } end ii1lili1iill1lIil1i = ii1lili1iill1lIil1i + 1 end if not iIi1Il1l1illilill1l[IiiliIiiIIiililIliI] then iIi1Il1l1illilill1l[IiiliIiiIIiililIliI] = {illIl1lIII1lliI1I1I} else lIlI1iI1Ili1l1i1I1iIl(iIi1Il1l1illilill1l[IiiliIiiIIiililIliI], illIl1lIII1lliI1I1I) end end end local iil1IIliiI11IIillII = lIll1ililIl1l1Ii1lIii(liI1iiI1i11lIilIIIl, IIIIl1i1l1lilil11iI, l1iIIlIiIiilII1Ii1I) IiiliIiiIIiililIliI[ii1111II1iIlIlI11lI[4]] = iil1IIliiI11IIillII end end end local lIlIiiI1ll1IIl1Illl, lIiI11IIlI1lI11I11I, iil11I1ilIiili1il11, lIlI1iIli1llil1i11lIi = lIl1Il1l1Ili1llIl1i1l(lIl1I11l11Ill1lIIi1ii) if lIlIiiI1ll1IIl1Illl then if iil11I1ilIiili1il11 then return I1Ii1liIIi1ilillIii(IiiliIiiIIiililIliI, iil11I1ilIiili1il11, lIlI1iIli1llil1i11lIi) end else llIlllII1Ii1lliIll1("Luraph Script:" .. (lii1il11lIllI11I1i1[ii1lili1iill1lIil1i - 1] or "") .. ": " .. iilIIIIl1i1Iii111ii(lIiI11IIlI1lI11I11I), 0) end end Il1lllI11iiIiiIIi11(lIl1lil111iliIlII1I, IIIIl1i1l1lilil11iI) return lIl1lil111iliIlII1I end local lIl1I1IIl1il1l1lllIIi = lIl11illI11llii11l1ii() return lIll1ililIl1l1Ii1lIii(lIl1I1IIl1il1l1lllIIi, IIIIl1i1l1lilil11iI)() end IlllI1Iii1Il111i1II("LPH!", lIli1IIilI1II1Ililiii()) 
end
syn.create_secure_function("loader", E())
