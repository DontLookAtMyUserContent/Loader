local lIiIIIliIII1l1IiI1I = assert local liiillIiiill111li1I = select local lIlI1llI1iIil1iIlill1 = tonumber local iI111Ili1I1lI1llI1I = unpack local il1lli1lllI1I1lIII1 = pcall local lIll1IIi1iIIi1IIlii1l = setfenv local l1IIiIi111llIiilill = setmetatable local iI1IlilIiilIliI1iIi = type local llIliii1ll1i1Ill1lI = getfenv local lIlI11li1l11illliiill = tostring local liI1lii1iIiiiilIi1l = error local IiilllI1i11I1IilIiI = string.sub local l1l1il1ll1l11Ii1ll1 = string.byte local lIlIi111llIlI1l1llI = string.char local i1iiliii11lllII11lI = string.rep local III1I11l11llIIilIil = string.gsub local lIllIii1iIlIIlIliIi11 = string.match local II11IIiliIllIIIll11 = table.insert local lllliiIIlIilIIlI1l1 = l1l1il1ll1l11Ii1ll1("4", 1) local lIl1il1i1iIliIlllI1iI, I11ii11iliillIIlIlI = #{6486}, #{ 5117, 3426, 2176, 3859, 5784, 3699, 6730, 6097, 2195, 4393, 3828, 36, 6881, 662, 1757, 5551, 1903, 5858, 6887, 4184, 4299, 6035, 39 } + lllliiIIlIilIIlI1l1 + 130996 local iiIill1iIi11iilllIl = {} local Iillli1iIlIllIlIil1 = 1 local IlIiI1lliII111iIl1i, lIlii1lllIil1lIII11Il local function i11iIIll1l11i11llil(Ii1ii1iIilI1lI1ilIi, lIlllII1IiI1IIll11i1i) local I11IIlllilIiiiil1l1 Ii1ii1iIilI1lI1ilIi = III1I11l11llIIilIil(IiilllI1i11I1IilIiI(Ii1ii1iIilI1lI1ilIi, 5), "..", function(IIi11lliilI11liIi1l) if l1l1il1ll1l11Ii1ll1(IIi11lliilI11liIi1l, 2) == 72 then I11IIlllilIiiiil1l1 = lIlI1llI1iIil1iIlill1(IiilllI1i11I1IilIiI(IIi11lliilI11liIi1l, 1, 1)) return "" else local lIliIiIill1ill1llliil = lIlIi111llIlI1l1llI(lIlI1llI1iIil1iIlill1(IIi11lliilI11liIi1l, 16)) if I11IIlllilIiiiil1l1 then local lIlli1l1i11li1IIiii1l = i1iiliii11lllII11lI(lIliIiIill1ill1llliil, I11IIlllilIiiiil1l1) I11IIlllilIiiiil1l1 = nil return lIlli1l1i11li1IIiii1l else return lIliIiIill1ill1llliil end end end) local function II1IlIIIll1Iil1l1li() local Ii1I1Ill1IiI1II11l1 = l1l1il1ll1l11Ii1ll1(Ii1ii1iIilI1lI1ilIi, Iillli1iIlIllIlIil1, Iillli1iIlIllIlIil1) Iillli1iIlIllIlIil1 = Iillli1iIlIllIlIil1 + 1 return Ii1I1Ill1IiI1II11l1 end local function IIl111IIiiii11iiIiI() local Ii1I1Ill1IiI1II11l1, lIliIiIill1ill1llliil, lIlli1l1i11li1IIiii1l, iI111IIII1IliiIllIl = l1l1il1ll1l11Ii1ll1(Ii1ii1iIilI1lI1ilIi, Iillli1iIlIllIlIil1, Iillli1iIlIllIlIil1 + 3) Iillli1iIlIllIlIil1 = Iillli1iIlIllIlIil1 + 4 return iI111IIII1IliiIllIl * 16777216 + lIlli1l1i11li1IIiii1l * 65536 + lIliIiIill1ill1llliil * 256 + Ii1I1Ill1IiI1II11l1 end local function l111iIi1l1iIillIli1(lIliiIlIll1II11iilii1, lIl1ilIiiilIl11liI1li, lIliIl1IiIiII1lIiii) if lIliIl1IiIiII1lIiii then local l1IiIil1lI1I111illI, lIlI1I1ii11i1l1lI1Iii = 0, 0 for lIllIiIlll1lilllllil1 = lIl1ilIiiilIl11liI1li, lIliIl1IiIiII1lIiii do l1IiIil1lI1I111illI = l1IiIil1lI1I111illI + 2 ^ lIlI1I1ii11i1l1lI1Iii * l111iIi1l1iIillIli1(lIliiIlIll1II11iilii1, lIllIiIlll1lilllllil1) lIlI1I1ii11i1l1lI1Iii = lIlI1I1ii11i1l1lI1Iii + 1 end return l1IiIil1lI1I111illI else local lIliIlIliIIiIl11liII1 = 2 ^ (lIl1ilIiiilIl11liI1li - 1) return lIliIlIliIIiIl11liII1 <= lIliiIlIll1II11iilii1 % (lIliIlIliIIiIl11liII1 + lIliIlIliIIiIl11liII1) and 1 or 0 end end local function liiIIll1IiIi1IllI1I() local Ii1I1Ill1IiI1II11l1, lIliIiIill1ill1llliil = IIl111IIiiii11iiIiI(), IIl111IIiiii11iiIiI() if Ii1I1Ill1IiI1II11l1 == 0 and lIliIiIill1ill1llliil == 0 then return 0 end return (-2 * l111iIi1l1iIillIli1(lIliIiIill1ill1llliil, 32) + 1) * 2 ^ (l111iIi1l1iIillIli1(lIliIiIill1ill1llliil, 21, 31) - 1023) * ((l111iIi1l1iIillIli1(lIliIiIill1ill1llliil, 1, 20) * 4294967296 + Ii1I1Ill1IiI1II11l1) / 4503599627370496 + 1) end local lIll1Ill1iilIi1iI1I1I = bit or bit32 local i1ll1lllil1IiIIIIll = lIll1Ill1iilIi1iI1I1I and lIll1Ill1iilIi1iI1I1I.bxor or function(Ii1I1Ill1IiI1II11l1, lIliIiIill1ill1llliil) local II1llIi1i1l1iiilIIl = 1 local lIlli1l1i11li1IIiii1l = 0 while Ii1I1Ill1IiI1II11l1 > 0 and lIliIiIill1ill1llliil > 0 do local i1Iii11lilIIIlIiiiI = Ii1I1Ill1IiI1II11l1 % 2 local lIlll1IIlIiiiliI1Ii = lIliIiIill1ill1llliil % 2 if i1Iii11lilIIIlIiiiI ~= lIlll1IIlIiiiliI1Ii then lIlli1l1i11li1IIiii1l = lIlli1l1i11li1IIiii1l + II1llIi1i1l1iiilIIl end Ii1I1Ill1IiI1II11l1 = (Ii1I1Ill1IiI1II11l1 - i1Iii11lilIIIlIiiiI) / 2 lIliIiIill1ill1llliil = (lIliIiIill1ill1llliil - lIlll1IIlIiiiliI1Ii) / 2 II1llIi1i1l1iiilIIl = II1llIi1i1l1iiilIIl * 2 end if Ii1I1Ill1IiI1II11l1 < lIliIiIill1ill1llliil then Ii1I1Ill1IiI1II11l1 = lIliIiIill1ill1llliil end while Ii1I1Ill1IiI1II11l1 > 0 do local i1Iii11lilIIIlIiiiI = Ii1I1Ill1IiI1II11l1 % 2 if i1Iii11lilIIIlIiiiI > 0 then lIlli1l1i11li1IIiii1l = lIlli1l1i11li1IIiii1l + II1llIi1i1l1iiilIIl end Ii1I1Ill1IiI1II11l1 = (Ii1I1Ill1IiI1II11l1 - i1Iii11lilIIIlIiiiI) / 2 II1llIi1i1l1iiilIIl = II1llIi1i1l1iiilIIl * 2 end return lIlli1l1i11li1IIiii1l end local function IlI1i1iilii11lIl1iI(IlIi1I1iilIillI1lil) local i1lliIliiliIl1IiIl1 = { l1l1il1ll1l11Ii1ll1(Ii1ii1iIilI1lI1ilIi, Iillli1iIlIllIlIil1, Iillli1iIlIllIlIil1 + 3) } Iillli1iIlIllIlIil1 = Iillli1iIlIllIlIil1 + 4 local Ii1I1Ill1IiI1II11l1 = i1ll1lllil1IiIIIIll(i1lliIliiliIl1IiIl1[1], lIlii1lllIil1lIII11Il) local lIliIiIill1ill1llliil = i1ll1lllil1IiIIIIll(i1lliIliiliIl1IiIl1[2], lIlii1lllIil1lIII11Il) local lIlli1l1i11li1IIiii1l = i1ll1lllil1IiIIIIll(i1lliIliiliIl1IiIl1[3], lIlii1lllIil1lIII11Il) local iI111IIII1IliiIllIl = i1ll1lllil1IiIIIIll(i1lliIliiliIl1IiIl1[4], lIlii1lllIil1lIII11Il) lIlii1lllIil1lIII11Il = (121 * lIlii1lllIil1lIII11Il + IlIi1I1iilIillI1lil) % 256 return iI111IIII1IliiIllIl * 16777216 + lIlli1l1i11li1IIiii1l * 65536 + lIliIiIill1ill1llliil * 256 + Ii1I1Ill1IiI1II11l1 end local function II111i1II1llllIIII1(l1I11i11i1iI1lliiii) local iIllil111111IlIIi1I = IIl111IIiiii11iiIiI() local iI1IliiIlII1i11ilII = "" for lIllIiIlll1lilllllil1 = lIl1il1i1iIliIlllI1iI, iIllil111111IlIIi1I do iI1IliiIlII1i11ilII = iI1IliiIlII1i11ilII .. lIlIi111llIlI1l1llI(i1ll1lllil1IiIIIIll(l1l1il1ll1l11Ii1ll1(Ii1ii1iIilI1lI1ilIi, Iillli1iIlIllIlIil1 + lIllIiIlll1lilllllil1 - 1), IlIiI1lliII111iIl1i)) IlIiI1lliII111iIl1i = (l1I11i11i1iI1lliiii * IlIiI1lliII111iIl1i + 29) % 256 end Iillli1iIlIllIlIil1 = Iillli1iIlIllIlIil1 + iIllil111111IlIIi1I return iI1IliiIlII1i11ilII end IlIiI1lliII111iIl1i = II1IlIIIll1Iil1l1li() lIlii1lllIil1lIII11Il = II1IlIIIll1Iil1l1li() local lIliIIiIliIl1iIl1Il1i = {} for lIllIiIlll1lilllllil1 = lIl1il1i1iIliIlllI1iI, II1IlIIIll1Iil1l1li() do local il1IillII111iIii11I = II1IlIIIll1Iil1l1li() local lIlil1iiIliiii1iil11I = (lIllIiIlll1lilllllil1 - 1) * 2 lIliIIiIliIl1iIl1Il1i[lIlil1iiIliiii1iil11I] = l111iIi1l1iIillIli1(il1IillII111iIii11I, 1, 4) lIliIIiIliIl1iIl1Il1i[lIlil1iiIliiii1iil11I + 1] = l111iIi1l1iIillIli1(il1IillII111iIii11I, 5, 8) end local function lIlllIlllIi1lIili1lil() local lI1iilIillIIl1lI1il = { nil, {}, {}, {}, nil, nil, {} } IIl111IIiiii11iiIiI() lI1iilIillIIl1lI1il[5] = II1IlIIIll1Iil1l1li() II1IlIIIll1Iil1l1li() IIl111IIiiii11iiIiI() local IIIill1111l1I1I1ii1 = IIl111IIiiii11iiIiI() for lIllIiIlll1lilllllil1 = lIl1il1i1iIliIlllI1iI, IIIill1111l1I1I1ii1 do lI1iilIillIIl1lI1il[3][lIllIiIlll1lilllllil1] = IIl111IIiiii11iiIiI() end II1IlIIIll1Iil1l1li() local IIIill1111l1I1I1ii1 = IIl111IIiiii11iiIiI() - (#{ 1215, 2754, 800, 5144, 2574, 1814, 6394, 5333, 1082, 2781, 4678, 3818, 1290, 2941, 6154, 2106, 6954, 406, 94, 709 } + lllliiIIlIilIIlI1l1 + 133635) local i11lIlIi1iIliIli1lI = II1IlIIIll1Iil1l1li() for lIllIiIlll1lilllllil1 = lIl1il1i1iIliIlllI1iI, IIIill1111l1I1I1ii1 do local l1l1IlIiIlilIlllili local iI1IlilIiilIliI1iIi = II1IlIIIll1Iil1l1li() if iI1IlilIiilIliI1iIi == #{ 2494, 367, 2765, 673, 2188, 20, 598, 3756, 4745, 1675, 3145, 1087, 2849, 469, 4425, 1167, 6021, 5618, 3857, 6185, 5826, 3983, 471 } + lllliiIIlIilIIlI1l1 + -21 then l1l1IlIiIlilIlllili = #{ 6654, 5801, 1084, 86, 2778, 2170, 2089, 1852, 2746, 6317, 6277, 1964, 4030, 105, 5566, 5610, 3755, 3661, 6, 5336 } + lllliiIIlIilIIlI1l1 + 37594 == #{ 1107, 6759, 6372, 4781, 3286, 2864, 5977, 4067, 2182, 6471, 6742, 300, 2197, 2022, 3412, 5287, 1995, 682, 5333, 1427, 3589, 2117, 4074 } + lllliiIIlIilIIlI1l1 + 18831 end if iI1IlilIiilIliI1iIi == #{ 461, 3686, 1176, 2409, 4485, 6058, 2186, 3294, 6582, 2107, 5099, 2902, 260, 5234, 3161, 1861, 6751, 4418, 6763, 6688, 2207, 6299 } + lllliiIIlIilIIlI1l1 + -46 then l1l1IlIiIlilIlllili = liiIIll1IiIi1IllI1I() end if iI1IlilIiilIliI1iIi == #{ 5376, 3152, 152 } then l1l1IlIiIlilIlllili = IIl111IIiiii11iiIiI() end if iI1IlilIiilIliI1iIi == #{ 5208, 2725, 1510, 1799, 2439, 5648, 2100, 2209, 5553, 6020, 1533, 811, 4109, 6387, 171, 5911, 3491, 4026, 5703, 5280 } + lllliiIIlIilIIlI1l1 + 34 then l1l1IlIiIlilIlllili = #{ 918, 6849, 5749, 4859, 300, 187, 3711, 4621, 620, 5986, 4478, 3005, 4318, 6043, 1643, 5697, 6204, 2715, 2893, 5699 } + lllliiIIlIilIIlI1l1 + 78035 == #{ 918, 6849, 5749, 4859, 300, 187, 3711, 4621, 620, 5986, 4478, 3005, 4318, 6043, 1643, 5697, 6204, 2715, 2893, 5699 } + lllliiIIlIilIIlI1l1 + 78035 end if iI1IlilIiilIliI1iIi == #{ 4673, 3325, 6042, 2656, 3287, 4373, 6405, 3232, 2462, 3780, 6701, 4018, 3093, 3255, 6405 } then l1l1IlIiIlilIlllili = IiilllI1i11I1IilIiI(II111i1II1llllIIII1(i11lIlIi1iIliIli1lI), #{ 3011, 81, 3828 }) end if iI1IlilIiilIliI1iIi == #{ 1546, 1430, 4149, 2642, 5763, 6832, 6536, 1774, 4978, 1908, 5290, 6966, 4450, 5137, 2800, 5107, 3640, 58, 6253, 5026, 3337 } + lllliiIIlIilIIlI1l1 + 65 then l1l1IlIiIlilIlllili = IIl111IIiiii11iiIiI() end if iI1IlilIiilIliI1iIi == #{ 2199, 4470, 1462, 1563, 6537, 3885, 3557, 1367, 2011, 5800, 6329, 145, 1710, 3327, 619, 5757, 5143, 6222, 5229, 5951, 5123, 2577 } + lllliiIIlIilIIlI1l1 + 165 then l1l1IlIiIlilIlllili = IiilllI1i11I1IilIiI(II111i1II1llllIIII1(insEncKey), #{ 3262, 1010, 4622 }) end if iI1IlilIiilIliI1iIi == #{ 4588, 3862, 2068, 2555, 1246, 1531, 889, 2040, 2644, 3491, 3412, 5419, 1446, 6703, 3835, 4418, 2336, 2306, 5372, 2465 } + lllliiIIlIilIIlI1l1 + 35 then l1l1IlIiIlilIlllili = liiIIll1IiIi1IllI1I() + liiIIll1IiIi1IllI1I() end if iI1IlilIiilIliI1iIi == #{ 1346, 2629, 6610, 5901, 1572, 4727, 4264, 1205, 1832, 2543, 549, 1752, 688, 2879, 1114, 2481, 5483, 3541, 3200, 5518, 3589 } + lllliiIIlIilIIlI1l1 + -7 then l1l1IlIiIlilIlllili = liiIIll1IiIi1IllI1I() end lI1iilIillIIl1lI1il[7][lIllIiIlll1lilllllil1 - lIl1il1i1iIliIlllI1iI] = l1l1IlIiIlilIlllili end lI1iilIillIIl1lI1il[6] = II1IlIIIll1Iil1l1li() local lIlIi1Iiii1iiiili1I1i = IIl111IIiiii11iiIiI() - (#{ 5880, 438, 3490, 700, 6967, 5113, 5304, 1714, 5667, 5822, 4009, 4285, 2913, 3909, 1135, 104, 1177, 2314, 6270, 447, 2438, 1563 } + lllliiIIlIilIIlI1l1 + 133674) local lIl11IllI1i1iI1Iili11 = II1IlIIIll1Iil1l1li() for lIllIiIlll1lilllllil1 = lIl1il1i1iIliIlllI1iI, lIlIi1Iiii1iiiili1I1i do local lIli1lI1IilIIlliiiIli = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local il1IillII111iIii11I = IlI1i1iilii11lIl1iI(lIl11IllI1i1iI1Iili11) lIli1lI1IilIIlliiiIli[6] = l111iIi1l1iIillIli1(il1IillII111iIii11I, #{ 1293, 6885, 4090, 3571, 2317, 3581, 4129, 5706, 3416, 6462, 1682, 4522, 2106, 2807, 6135, 951, 1706, 2184, 5508, 1684, 4555 } + lllliiIIlIilIIlI1l1 + -46, #{ 1485, 317, 3377, 1511, 5053, 6487, 1547, 699, 6232, 852, 2319, 3956, 5213, 2563, 1288, 2490, 155, 2884, 3016, 1304, 6439 } + lllliiIIlIilIIlI1l1 + -41) lIli1lI1IilIIlliiiIli[4] = l111iIi1l1iIillIli1(il1IillII111iIii11I, #{ 6120, 6133, 3787, 2828, 4137, 5674, 6820, 3196, 5219, 6809, 4822, 2400, 6685, 5268, 6316, 4348, 6294, 6963, 3256 }, #{ 6385, 850, 814, 524, 1087, 6189, 3453, 5283, 4204, 1064, 5020, 1593, 6826, 5686, 1580, 3264, 1870, 3879, 3249, 5801, 4200, 3071, 1304 } + lllliiIIlIilIIlI1l1 + -49) lIli1lI1IilIIlliiiIli[2] = l111iIi1l1iIillIli1(il1IillII111iIii11I, #{2437}, #{ 572, 5264, 1387, 3739, 6336, 2166, 3817, 3231, 2404 }) lIli1lI1IilIIlliiiIli[10] = l111iIi1l1iIillIli1(il1IillII111iIii11I, #{6848}, #{ 656, 3059, 4276, 6934, 4013, 1139, 5012, 5231, 5924, 6628, 458, 2510, 4534, 3591, 650, 3634, 1284, 673 }) lIli1lI1IilIIlliiiIli[9] = l111iIi1l1iIillIli1(il1IillII111iIii11I, #{ 1001, 3211, 1190, 814, 2163, 6436, 5991, 2923, 2315, 4879 }, #{ 2939, 856, 934, 6893, 4804, 795, 2122, 6403, 527, 3634, 6537, 386, 6836, 5433, 4844, 6142, 339, 89 }) lI1iilIillIIl1lI1il[4][lIllIiIlll1lilllllil1] = lIli1lI1IilIIlliiiIli end for lIllIiIlll1lilllllil1 = lIl1il1i1iIliIlllI1iI, lIlIi1Iiii1iiiili1I1i do local lIli1lI1IilIIlliiiIli = lI1iilIillIIl1lI1il[4][lIllIiIlll1lilllllil1] local lIliilIli1ililiiIIlli = lIliIIiIliIl1iIl1Il1i[lIli1lI1IilIIlliiiIli[6]] if lIliilIli1ililiiIIlli == #{4241, 6417} and lIli1lI1IilIIlliiiIli[9] > 255 then lIli1lI1IilIIlliiiIli[5] = true lIli1lI1IilIIlliiiIli[3] = lI1iilIillIIl1lI1il[7][lIli1lI1IilIIlliiiIli[9] - 256] end if lIliilIli1ililiiIIlli == #{ 1731, 2913, 1247 } then if lIli1lI1IilIIlliiiIli[2] > 255 then lIli1lI1IilIIlliiiIli[1] = true lIli1lI1IilIIlliiiIli[7] = lI1iilIillIIl1lI1il[7][lIli1lI1IilIIlliiiIli[2] - 256] end if lIli1lI1IilIIlliiiIli[9] > 255 then lIli1lI1IilIIlliiiIli[5] = true lIli1lI1IilIIlliiiIli[3] = lI1iilIillIIl1lI1il[7][lIli1lI1IilIIlliiiIli[9] - 256] end end if lIliilIli1ililiiIIlli == #{3343} and lIli1lI1IilIIlliiiIli[2] > 255 then lIli1lI1IilIIlliiiIli[1] = true lIli1lI1IilIIlliiiIli[7] = lI1iilIillIIl1lI1il[7][lIli1lI1IilIIlliiiIli[2] - 256] end if lIliilIli1ililiiIIlli == #{ 2860, 760, 1367, 2106 } then lIli1lI1IilIIlliiiIli[8] = lI1iilIillIIl1lI1il[7][lIli1lI1IilIIlliiiIli[10]] end end lI1iilIillIIl1lI1il[1] = II1IlIIIll1Iil1l1li() local IIIill1111l1I1I1ii1 = IIl111IIiiii11iiIiI() for lIllIiIlll1lilllllil1 = lIl1il1i1iIliIlllI1iI, IIIill1111l1I1I1ii1 do lI1iilIillIIl1lI1il[2][lIllIiIlll1lilllllil1 - lIl1il1i1iIliIlllI1iI] = lIlllIlllIi1lIili1lil() end II1IlIIIll1Iil1l1li() IIl111IIiiii11iiIiI() return lI1iilIillIIl1lI1il end local function Il11111IlIli1IlI1il(lI1iilIillIIl1lI1il, lIlllII1IiI1IIll11i1i, lIl1iiiI1iiI1IlI1l1II) local lli1l11ili11lIIII1i, llliiIIlii1lI1llilI = 18, 9 local lIllIIllIilIIiIlI1IlI = lI1iilIillIIl1lI1il[4] local ll1liI1Ii1IlliIllIi = 5 local i11IllI1IiIiIii1i1I = lI1iilIillIIl1lI1il[2] local lIlIi11llIiiiillli1l1 = lI1iilIillIIl1lI1il[6] local l1Iii1IilIi1ll11il1 = lI1iilIillIIl1lI1il[1] local Ii111li1l1IilIlIIII = 6 local lIlIll1lli11ll11il1ii = lI1iilIillIIl1lI1il[3] local lIlIiliiiIl1llliIilii = 2 local function l11illil11I1il1ilI1(...) local il1i11I1Illllil1lll = 0 local iIlIliilliIIliIilil = { iI111Ili1I1lI1llI1I({}, 1, l1Iii1IilIi1ll11il1) } local liIllli11iii1IliIll = 1 local IillIiIl1IIIili1III = {} local llll1ill1iliil11Iii = {} local lIlllII1IiI1IIll11i1i = llIliii1ll1i1Ill1lI() local l1IlIiliiI1l1li1Iii = { ... } local IIiiIIiiIl1l1lllli1 = #l1IlIiliiI1l1li1Iii - 1 for lIllIiIlll1lilllllil1 = 0, IIiiIIiiIl1l1lllli1 do if lIllIiIlll1lilllllil1 < lIlIi11llIiiiillli1l1 then iIlIliilliIIliIilil[lIllIiIlll1lilllllil1] = l1IlIiliiI1l1li1Iii[lIllIiIlll1lilllllil1 + 1] end end local function lIlI1liIIill11l1lll1l(...) local lIlli1l1i11li1IIiii1l = liiillIiiill111li1I("#", ...) local lIllIiiiiIIlllilI1i1l = { ... } return lIlli1l1i11li1IIiii1l, lIllIiiiiIIlllilI1i1l end local function lIlIIlii1IlliIiI1ilIi() while true do local iiilIl11IIiI1ii1III = lIllIIllIilIIiIlI1IlI[liIllli11iii1IliIll] local llil1liiiI1IIiili1l = iiilIl11IIiI1ii1III[6] liIllli11iii1IliIll = liIllli11iii1IliIll + 1 if llil1liiiI1IIiili1l >= 9 then if llil1liiiI1IIiili1l < 14 then if llil1liiiI1IIiili1l < 11 then if llil1liiiI1IIiili1l == 10 then if iiilIl11IIiI1ii1III[2] == 37 then liIllli11iii1IliIll = liIllli11iii1IliIll - 1 lIllIIllIilIIiIlI1IlI[liIllli11iii1IliIll] = { [6] = 9, [4] = (iiilIl11IIiI1ii1III[4] - 170) % 256, [2] = (iiilIl11IIiI1ii1III[9] - 170) % 256 } elseif not not iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] == (iiilIl11IIiI1ii1III[9] == 0) then liIllli11iii1IliIll = liIllli11iii1IliIll + 1 end else iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = lIl1iiiI1iiI1IlI1l1II[iiilIl11IIiI1ii1III[2]] end elseif llil1liiiI1IIiili1l < 12 then IillIiIl1IIIili1III[iIlIliilliIIliIilil] = nil local iIIiIIlI1IIlli1lIi1 = iiilIl11IIiI1ii1III[4] local i1ll1iiIlII1i1I1iI1 = iiilIl11IIiI1ii1III[2] if i1ll1iiIlII1i1I1iI1 == 1 then return true end local l1i1liI1Il11Iiilll1 = iIIiIIlI1IIlli1lIi1 + i1ll1iiIlII1i1I1iI1 - 2 if i1ll1iiIlII1i1I1iI1 == 0 then l1i1liI1Il11Iiilll1 = il1i11I1Illllil1lll end return true, iIIiIIlI1IIlli1lIi1, l1i1liI1Il11Iiilll1 elseif llil1liiiI1IIiili1l ~= 13 then local lIlli1l1i11li1IIiii1l if iiilIl11IIiI1ii1III[5] then lIlli1l1i11li1IIiii1l = iiilIl11IIiI1ii1III[3] else lIlli1l1i11li1IIiii1l = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[9]] end iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[2]][lIlli1l1i11li1IIiii1l] else local iIIiIIlI1IIlli1lIi1 = iiilIl11IIiI1ii1III[4] local l1IlIiliiI1l1li1Iii = iiilIl11IIiI1ii1III[2] local IiIIl11lIl1liI1lliI = iiilIl11IIiI1ii1III[9] local lIlil1IIi1lIi1Iil1lli, l1i1liI1Il11Iiilll1, lIlIIlii1IlliIiI1ilIi if l1IlIiliiI1l1li1Iii ~= 1 then if l1IlIiliiI1l1li1Iii ~= 0 then l1i1liI1Il11Iiilll1 = iIIiIIlI1IIlli1lIi1 + l1IlIiliiI1l1li1Iii - 1 else l1i1liI1Il11Iiilll1 = il1i11I1Illllil1lll end l1i1liI1Il11Iiilll1, lIlil1IIi1lIi1Iil1lli = lIlI1liIIill11l1lll1l(iIlIliilliIIliIilil[iIIiIIlI1IIlli1lIi1](iI111Ili1I1lI1llI1I(iIlIliilliIIliIilil, iIIiIIlI1IIlli1lIi1 + 1, l1i1liI1Il11Iiilll1))) else l1i1liI1Il11Iiilll1, lIlil1IIi1lIi1Iil1lli = lIlI1liIIill11l1lll1l(iIlIliilliIIliIilil[iIIiIIlI1IIlli1lIi1]()) end if IiIIl11lIl1liI1lliI ~= 1 then if IiIIl11lIl1liI1lliI ~= 0 then l1i1liI1Il11Iiilll1 = iIIiIIlI1IIlli1lIi1 + IiIIl11lIl1liI1lliI - 2 il1i11I1Illllil1lll = l1i1liI1Il11Iiilll1 + 1 else l1i1liI1Il11Iiilll1 = l1i1liI1Il11Iiilll1 + iIIiIIlI1IIlli1lIi1 - 1 il1i11I1Illllil1lll = l1i1liI1Il11Iiilll1 end lIlIIlii1IlliIiI1ilIi = 0 for lIllIiIlll1lilllllil1 = iIIiIIlI1IIlli1lIi1, l1i1liI1Il11Iiilll1 do lIlIIlii1IlliIiI1ilIi = lIlIIlii1IlliIiI1ilIi + 1 iIlIliilliIIliIilil[lIllIiIlll1lilllllil1] = lIlil1IIi1lIi1Iil1lli[lIlIIlii1IlliIiI1ilIi] end else il1i11I1Illllil1lll = iIIiIIlI1IIlli1lIi1 - 1 end for lIllIiIlll1lilllllil1 = il1i11I1Illllil1lll + 1, l1Iii1IilIi1ll11il1 do iIlIliilliIIliIilil[lIllIiIlll1lilllllil1] = nil end end elseif llil1liiiI1IIiili1l >= 16 then if llil1liiiI1IIiili1l >= 17 then if llil1liiiI1IIiili1l == 18 then iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[2]] else liIllli11iii1IliIll = liIllli11iii1IliIll + (iiilIl11IIiI1ii1III[10] - I11ii11iliillIIlIlI) end else iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = { iI111Ili1I1lI1llI1I(iiIill1iIi11iilllIl, 1, iiilIl11IIiI1ii1III[2] == 0 and 255 or iiilIl11IIiI1ii1III[2]) } end elseif llil1liiiI1IIiili1l ~= 15 then if iiilIl11IIiI1ii1III[9] == 165 then liIllli11iii1IliIll = liIllli11iii1IliIll - 1 lIllIIllIilIIiIlI1IlI[liIllli11iii1IliIll] = { [6] = 18, [4] = (iiilIl11IIiI1ii1III[4] - 219) % 256, [2] = (iiilIl11IIiI1ii1III[2] - 219) % 256 } else iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = -iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[2]] end else local l1lilIi111iI1lii111 = i11IllI1IiIiIii1i1I[iiilIl11IIiI1ii1III[10]] local lIllll1iiIiIlIi11IiiI = {} if l1lilIi111iI1lii111[ll1liI1Ii1IlliIllIi] > 0 then do local iiIIl1Ill1ll1iIi1Il = {} lIllll1iiIiIlIi11IiiI = l1IIiIi111llIiilill({}, { __index = function(lIllIiiiiIIlllilI1i1l, lll1I1iil1I111liI1i) local lIlIiliiililI1iIlII = iiIIl1Ill1ll1iIi1Il[lll1I1iil1I111liI1i] return lIlIiliiililI1iIlII[1][lIlIiliiililI1iIlII[2]] end, __newindex = function(lIllIiiiiIIlllilI1i1l, lll1I1iil1I111liI1i, lIli1I1iIilli11lilIll) local lIlIiliiililI1iIlII = iiIIl1Ill1ll1iIi1Il[lll1I1iil1I111liI1i] lIlIiliiililI1iIlII[1][lIlIiliiililI1iIlII[2]] = lIli1I1iIilli11lilIll end }) for lIllIiIlll1lilllllil1 = 1, l1lilIi111iI1lii111[ll1liI1Ii1IlliIllIi] do local lilillIi1I1111l1iIi = lIllIIllIilIIiIlI1IlI[liIllli11iii1IliIll] if lilillIi1I1111l1iIi[Ii111li1l1IilIlIIII] == lli1l11ili11lIIII1i then iiIIl1Ill1ll1iIi1Il[lIllIiIlll1lilllllil1 - 1] = { iIlIliilliIIliIilil, lilillIi1I1111l1iIi[lIlIiliiiIl1llliIilii] } elseif lilillIi1I1111l1iIi[Ii111li1l1IilIlIIII] == llliiIIlii1lI1llilI then iiIIl1Ill1ll1iIi1Il[lIllIiIlll1lilllllil1 - 1] = { lIl1iiiI1iiI1IlI1l1II, lilillIi1I1111l1iIi[lIlIiliiiIl1llliIilii] } end liIllli11iii1IliIll = liIllli11iii1IliIll + 1 end if not IillIiIl1IIIili1III[iIlIliilliIIliIilil] then IillIiIl1IIIili1III[iIlIliilliIIliIilil] = {iiIIl1Ill1ll1iIi1Il} else II11IIiliIllIIIll11(IillIiIl1IIIili1III[iIlIliilliIIliIilil], iiIIl1Ill1ll1iIi1Il) end end end local I1lI1iI1i1lilliill1 = Il11111IlIli1IlI1il(l1lilIi111iI1lii111, lIlllII1IiI1IIll11i1i, lIllll1iiIiIlIi11IiiI) iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = I1lI1iI1i1lilliill1 end elseif llil1liiiI1IIiili1l >= 4 then if llil1liiiI1IIiili1l >= 6 then if llil1liiiI1IIiili1l < 7 then local lIlil1iiIliiii1iil11I = (iiilIl11IIiI1ii1III[9] - 1) * 50 local lIlllI1iii1lIiIIIiIII = iiilIl11IIiI1ii1III[2] if lIlllI1iii1lIiIIIiIII == 0 then lIlllI1iii1lIiIIIiIII = il1i11I1Illllil1lll - iiilIl11IIiI1ii1III[4] end for lIllIiIlll1lilllllil1 = 1, lIlllI1iii1lIiIIIiIII do iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]][lIlil1iiIliiii1iil11I + lIllIiIlll1lilllllil1] = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4] + lIllIiIlll1lilllllil1] end elseif llil1liiiI1IIiili1l == 8 then iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = lIlllII1IiI1IIll11i1i[iiilIl11IIiI1ii1III[8]] else iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = iiilIl11IIiI1ii1III[8] end elseif llil1liiiI1IIiili1l ~= 5 then local I11lII1Ii1liilillII = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[2]] local lIlli1l1i11li1IIiii1l if iiilIl11IIiI1ii1III[5] then lIlli1l1i11li1IIiii1l = iiilIl11IIiI1ii1III[3] else lIlli1l1i11li1IIiii1l = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[9]] end iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4] + 1] = I11lII1Ii1liilillII iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = I11lII1Ii1liilillII[lIlli1l1i11li1IIiii1l] else local lIliIiIill1ill1llliil, lIlli1l1i11li1IIiii1l if iiilIl11IIiI1ii1III[1] then lIliIiIill1ill1llliil = iiilIl11IIiI1ii1III[7] else lIliIiIill1ill1llliil = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[2]] end if iiilIl11IIiI1ii1III[5] then lIlli1l1i11li1IIiii1l = iiilIl11IIiI1ii1III[3] else lIlli1l1i11li1IIiii1l = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[9]] end if lIliIiIill1ill1llliil == lIlli1l1i11li1IIiii1l ~= (iiilIl11IIiI1ii1III[4] ~= 0) then liIllli11iii1IliIll = liIllli11iii1IliIll + 1 end end elseif llil1liiiI1IIiili1l >= 2 then if llil1liiiI1IIiili1l ~= 3 then local lIliIiIill1ill1llliil, lIlli1l1i11li1IIiii1l if iiilIl11IIiI1ii1III[1] then lIliIiIill1ill1llliil = iiilIl11IIiI1ii1III[7] else lIliIiIill1ill1llliil = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[2]] end if iiilIl11IIiI1ii1III[5] then lIlli1l1i11li1IIiii1l = iiilIl11IIiI1ii1III[3] else lIlli1l1i11li1IIiii1l = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[9]] end iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]][lIliIiIill1ill1llliil] = lIlli1l1i11li1IIiii1l else iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] = iiilIl11IIiI1ii1III[2] ~= 0 if iiilIl11IIiI1ii1III[9] ~= 0 then liIllli11iii1IliIll = liIllli11iii1IliIll + 1 end end elseif llil1liiiI1IIiili1l ~= 1 then lIlllII1IiI1IIll11i1i[iiilIl11IIiI1ii1III[8]] = iIlIliilliIIliIilil[iiilIl11IIiI1ii1III[4]] elseif iiilIl11IIiI1ii1III[9] == 51 then liIllli11iii1IliIll = liIllli11iii1IliIll - 1 lIllIIllIilIIiIlI1IlI[liIllli11iii1IliIll] = { [6] = 11, [4] = (iiilIl11IIiI1ii1III[4] - 13) % 256, [2] = (iiilIl11IIiI1ii1III[2] - 13) % 256 } else local i1Ii1iIIllI1ililIi1 = iiilIl11IIiI1ii1III[4] local I11ilIIi1iIliilIII1 = {} for ili1lIiiililIii11l1, iiIIl1Ill1ll1iIi1Il in pairs(IillIiIl1IIIili1III[iIlIliilliIIliIilil]) do for ili1lIiiililIii11l1, lIlIiliiililI1iIlII in pairs(iiIIl1Ill1ll1iIi1Il) do if lIlIiliiililI1iIlII[1] == iIlIliilliIIliIilil and i1Ii1iIIllI1ililIi1 <= lIlIiliiililI1iIlII[2] then local Ii1iIIli1l11iIiIiIl = lIlIiliiililI1iIlII[2] if not I11ilIIi1iIliilIII1[Ii1iIIli1l11iIiIiIl] then Il11111IlIli1IlI1il(llll1ill1iliil11Iii, iIlIliilliIIliIilil[Ii1iIIli1l11iIiIiIl]) I11ilIIi1iIliilIII1[Ii1iIIli1l11iIiIiIl] = #llll1ill1iliil11Iii end lIlIiliiililI1iIlII[1] = llll1ill1iliil11Iii lIlIiliiililI1iIlII[2] = I11ilIIi1iIliilIII1[Ii1iIIli1l11iIiIiIl] end end end end end end local ii1llIiIIilill1liI1, iI1IliiIlII1i11ilII, i1Ii1iIIllI1ililIi1, lIlii1l1iIlli1lll11Ii = il1lli1lllI1I1lIII1(lIlIIlii1IlliIiI1ilIi) if ii1llIiIIilill1liI1 then if i1Ii1iIIllI1ililIi1 then return iI111Ili1I1lI1llI1I(iIlIliilliIIliIilil, i1Ii1iIIllI1ililIi1, lIlii1l1iIlli1lll11Ii) end else liI1lii1iIiiiilIi1l("Luraph Script:" .. (lIlIll1lli11ll11il1ii[liIllli11iii1IliIll - 1] or "") .. ": " .. lIlI11li1l11illliiill(iI1IliiIlII1i11ilII), 0) end end lIll1IIi1iIIi1IIlii1l(l11illil11I1il1ilI1, lIlllII1IiI1IIll11i1i) return l11illil11I1il1ilI1 end local I11ilIIi1iIliilIII1 = lIlllIlllIi1lIili1lil() return Il11111IlIli1IlI1il(I11ilIIi1iIliilIII1, lIlllII1IiI1IIll11i1i)() end i11iIIll1l11i11llilllIliii1ll1i1Ill1lI()) 
